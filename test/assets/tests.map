{"version":3,"sources":["dummy/tests/adapters/application.jscs-test.js","dummy/tests/adapters/application.jshint.js","dummy/tests/app.jscs-test.js","dummy/tests/app.jshint.js","dummy/tests/components/css-picker.jscs-test.js","dummy/tests/components/css-picker.jshint.js","dummy/tests/components/number-input.jscs-test.js","dummy/tests/components/number-input.jshint.js","dummy/tests/components/settings-example.jscs-test.js","dummy/tests/components/settings-example.jshint.js","dummy/tests/controllers/application.jscs-test.js","dummy/tests/controllers/application.jshint.js","dummy/tests/controllers/components-examples/flexberry-button/settings-example.jscs-test.js","dummy/tests/controllers/components-examples/flexberry-button/settings-example.jshint.js","dummy/tests/controllers/components-examples/flexberry-ddau-checkbox/settings-example.jscs-test.js","dummy/tests/controllers/components-examples/flexberry-ddau-checkbox/settings-example.jshint.js","dummy/tests/controllers/components-examples/flexberry-maplayers/settings-example.jscs-test.js","dummy/tests/controllers/components-examples/flexberry-maplayers/settings-example.jshint.js","dummy/tests/controllers/components-examples/flexberry-tree/settings-example.jscs-test.js","dummy/tests/controllers/components-examples/flexberry-tree/settings-example.jshint.js","dummy/tests/controllers/map.jscs-test.js","dummy/tests/controllers/map.jshint.js","dummy/tests/controllers/map/new.jscs-test.js","dummy/tests/controllers/map/new.jshint.js","dummy/tests/controllers/maps.jscs-test.js","dummy/tests/controllers/maps.jshint.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-csw-connection-e.jscs-test.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-csw-connection-e.jshint.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-csw-connection-e/new.jscs-test.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-csw-connection-e/new.jshint.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-csw-connection-l.jscs-test.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-csw-connection-l.jshint.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-layer-metadata-e.jscs-test.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-layer-metadata-e.jshint.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-layer-metadata-e/new.jscs-test.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-layer-metadata-e/new.jshint.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-layer-metadata-l.jscs-test.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-layer-metadata-l.jshint.js","dummy/tests/controllers/sitemap-node.jscs-test.js","dummy/tests/controllers/sitemap-node.jshint.js","dummy/tests/helpers/destroy-app.js","dummy/tests/helpers/destroy-app.jscs-test.js","dummy/tests/helpers/destroy-app.jshint.js","dummy/tests/helpers/ember-i18n/test-helpers.js","dummy/tests/helpers/module-for-acceptance.js","dummy/tests/helpers/module-for-acceptance.jscs-test.js","dummy/tests/helpers/module-for-acceptance.jshint.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/resolver.jscs-test.js","dummy/tests/helpers/resolver.jshint.js","dummy/tests/helpers/start-app.js","dummy/tests/helpers/start-app.jscs-test.js","dummy/tests/helpers/start-app.jshint.js","dummy/tests/helpers/to-safe-string.jscs-test.js","dummy/tests/helpers/to-safe-string.jshint.js","dummy/tests/helpers/to-string.jscs-test.js","dummy/tests/helpers/to-string.jshint.js","dummy/tests/helpers/validate-properties.js","dummy/tests/initializers/spatial-bookmark-storage.jscs-test.js","dummy/tests/initializers/spatial-bookmark-storage.jshint.js","dummy/tests/integration/components/flexberry-ddau-checkbox-test.js","dummy/tests/integration/components/flexberry-ddau-checkbox-test.jscs-test.js","dummy/tests/integration/components/flexberry-ddau-checkbox-test.jshint.js","dummy/tests/integration/components/flexberry-layers-test.js","dummy/tests/integration/components/flexberry-layers-test.jscs-test.js","dummy/tests/integration/components/flexberry-layers-test.jshint.js","dummy/tests/integration/components/flexberry-map-test.js","dummy/tests/integration/components/flexberry-map-test.jscs-test.js","dummy/tests/integration/components/flexberry-map-test.jshint.js","dummy/tests/integration/components/flexberry-maptoolbar-test.js","dummy/tests/integration/components/flexberry-maptoolbar-test.jscs-test.js","dummy/tests/integration/components/flexberry-maptoolbar-test.jshint.js","dummy/tests/integration/components/layers/group-layer-test.js","dummy/tests/integration/components/layers/group-layer-test.jscs-test.js","dummy/tests/integration/components/layers/group-layer-test.jshint.js","dummy/tests/integration/components/legends/wms-legend-test.js","dummy/tests/integration/components/legends/wms-legend-test.jscs-test.js","dummy/tests/integration/components/legends/wms-legend-test.jshint.js","dummy/tests/integration/components/minimap-control-test.js","dummy/tests/integration/components/minimap-control-test.jscs-test.js","dummy/tests/integration/components/minimap-control-test.jshint.js","dummy/tests/integration/components/spatial-bookmark-test.js","dummy/tests/integration/components/spatial-bookmark-test.jscs-test.js","dummy/tests/integration/components/spatial-bookmark-test.jshint.js","dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-csw-connection-e.jscs-test.js","dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-csw-connection-e.jshint.js","dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-csw-connection-l.jscs-test.js","dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-csw-connection-l.jshint.js","dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-e.jscs-test.js","dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-e.jshint.js","dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-l.jscs-test.js","dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-l.jshint.js","dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-map-e.jscs-test.js","dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-map-e.jshint.js","dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-map-l.jscs-test.js","dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-map-l.jshint.js","dummy/tests/locales/en/translations.jscs-test.js","dummy/tests/locales/en/translations.jshint.js","dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-csw-connection-e.jscs-test.js","dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-csw-connection-e.jshint.js","dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-csw-connection-l.jscs-test.js","dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-csw-connection-l.jshint.js","dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-e.jscs-test.js","dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-e.jshint.js","dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-l.jscs-test.js","dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-l.jshint.js","dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-map-e.jscs-test.js","dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-map-e.jshint.js","dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-map-l.jscs-test.js","dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-map-l.jshint.js","dummy/tests/locales/ru/translations.jscs-test.js","dummy/tests/locales/ru/translations.jshint.js","dummy/tests/mixins/edit-form-controller-operations-indication.jscs-test.js","dummy/tests/mixins/edit-form-controller-operations-indication.jshint.js","dummy/tests/mixins/edit-form-route-operations-indication.jscs-test.js","dummy/tests/mixins/edit-form-route-operations-indication.jshint.js","dummy/tests/models/components-examples/flexberry-ddau-checkbox/settings-example/base.jscs-test.js","dummy/tests/models/components-examples/flexberry-ddau-checkbox/settings-example/base.jshint.js","dummy/tests/models/custom-inflector-rules.jscs-test.js","dummy/tests/models/custom-inflector-rules.jshint.js","dummy/tests/resolver.jscs-test.js","dummy/tests/resolver.jshint.js","dummy/tests/router.jscs-test.js","dummy/tests/router.jshint.js","dummy/tests/routes/application.jscs-test.js","dummy/tests/routes/application.jshint.js","dummy/tests/routes/components-examples/flexberry-button/settings-example.jscs-test.js","dummy/tests/routes/components-examples/flexberry-button/settings-example.jshint.js","dummy/tests/routes/components-examples/flexberry-ddau-checkbox/settings-example.jscs-test.js","dummy/tests/routes/components-examples/flexberry-ddau-checkbox/settings-example.jshint.js","dummy/tests/routes/components-examples/flexberry-maplayers/settings-example.jscs-test.js","dummy/tests/routes/components-examples/flexberry-maplayers/settings-example.jshint.js","dummy/tests/routes/components-examples/flexberry-tree/settings-example.jscs-test.js","dummy/tests/routes/components-examples/flexberry-tree/settings-example.jshint.js","dummy/tests/routes/index.jscs-test.js","dummy/tests/routes/index.jshint.js","dummy/tests/routes/map.jscs-test.js","dummy/tests/routes/map.jshint.js","dummy/tests/routes/map/new.jscs-test.js","dummy/tests/routes/map/new.jshint.js","dummy/tests/routes/maps.jscs-test.js","dummy/tests/routes/maps.jshint.js","dummy/tests/routes/new-platform-flexberry-g-i-s-csw-connection-e.jscs-test.js","dummy/tests/routes/new-platform-flexberry-g-i-s-csw-connection-e.jshint.js","dummy/tests/routes/new-platform-flexberry-g-i-s-csw-connection-e/new.jscs-test.js","dummy/tests/routes/new-platform-flexberry-g-i-s-csw-connection-e/new.jshint.js","dummy/tests/routes/new-platform-flexberry-g-i-s-csw-connection-l.jscs-test.js","dummy/tests/routes/new-platform-flexberry-g-i-s-csw-connection-l.jshint.js","dummy/tests/routes/new-platform-flexberry-g-i-s-layer-metadata-e.jscs-test.js","dummy/tests/routes/new-platform-flexberry-g-i-s-layer-metadata-e.jshint.js","dummy/tests/routes/new-platform-flexberry-g-i-s-layer-metadata-e/new.jscs-test.js","dummy/tests/routes/new-platform-flexberry-g-i-s-layer-metadata-e/new.jshint.js","dummy/tests/routes/new-platform-flexberry-g-i-s-layer-metadata-l.jscs-test.js","dummy/tests/routes/new-platform-flexberry-g-i-s-layer-metadata-l.jshint.js","dummy/tests/serializers/application.jscs-test.js","dummy/tests/serializers/application.jshint.js","dummy/tests/services/store.jscs-test.js","dummy/tests/services/store.jshint.js","dummy/tests/test-helper.js","dummy/tests/test-helper.jscs-test.js","dummy/tests/test-helper.jshint.js","dummy/tests/unit/components/base-control-test.js","dummy/tests/unit/components/base-control-test.jscs-test.js","dummy/tests/unit/components/base-control-test.jshint.js","dummy/tests/unit/components/base-layer-test.js","dummy/tests/unit/components/base-layer-test.jscs-test.js","dummy/tests/unit/components/base-layer-test.jshint.js","dummy/tests/unit/components/flexberry-map-test.js","dummy/tests/unit/components/flexberry-map-test.jscs-test.js","dummy/tests/unit/components/flexberry-map-test.jshint.js","dummy/tests/unit/components/layers/group-layer-test.js","dummy/tests/unit/components/layers/group-layer-test.jscs-test.js","dummy/tests/unit/components/layers/group-layer-test.jshint.js","dummy/tests/unit/components/layers/tile-layer-test.js","dummy/tests/unit/components/layers/tile-layer-test.jscs-test.js","dummy/tests/unit/components/layers/tile-layer-test.jshint.js","dummy/tests/unit/components/layers/wms-layer-test.js","dummy/tests/unit/components/layers/wms-layer-test.jscs-test.js","dummy/tests/unit/components/layers/wms-layer-test.jshint.js","dummy/tests/unit/components/minimap-control-test.js","dummy/tests/unit/components/minimap-control-test.jscs-test.js","dummy/tests/unit/components/minimap-control-test.jshint.js","dummy/tests/unit/components/scale-control-test.js","dummy/tests/unit/components/scale-control-test.jscs-test.js","dummy/tests/unit/components/scale-control-test.jshint.js","dummy/tests/unit/components/switch-scale-control-test.js","dummy/tests/unit/components/switch-scale-control-test.jscs-test.js","dummy/tests/unit/components/switch-scale-control-test.jshint.js","dummy/tests/unit/components/zoomslider-control-test.js","dummy/tests/unit/components/zoomslider-control-test.jscs-test.js","dummy/tests/unit/components/zoomslider-control-test.jshint.js","dummy/tests/unit/controllers/edit-map-test.js","dummy/tests/unit/controllers/edit-map-test.jscs-test.js","dummy/tests/unit/controllers/edit-map-test.jshint.js","dummy/tests/unit/controllers/list-map-test.js","dummy/tests/unit/controllers/list-map-test.jscs-test.js","dummy/tests/unit/controllers/list-map-test.jshint.js","dummy/tests/unit/helpers/flexberry-search-properties-osm-ru-test.js","dummy/tests/unit/helpers/flexberry-search-properties-osm-ru-test.jscs-test.js","dummy/tests/unit/helpers/flexberry-search-properties-osm-ru-test.jshint.js","dummy/tests/unit/helpers/instance-of-test.js","dummy/tests/unit/helpers/instance-of-test.jscs-test.js","dummy/tests/unit/helpers/instance-of-test.jshint.js","dummy/tests/unit/initializers/flexberry-map-commands-test.js","dummy/tests/unit/initializers/flexberry-map-commands-test.jscs-test.js","dummy/tests/unit/initializers/flexberry-map-commands-test.jshint.js","dummy/tests/unit/initializers/flexberry-map-tools-test.js","dummy/tests/unit/initializers/flexberry-map-tools-test.jscs-test.js","dummy/tests/unit/initializers/flexberry-map-tools-test.jshint.js","dummy/tests/unit/initializers/spatial-bookmark-storage-test.js","dummy/tests/unit/initializers/spatial-bookmark-storage-test.jscs-test.js","dummy/tests/unit/initializers/spatial-bookmark-storage-test.jshint.js","dummy/tests/unit/mixins/dynamic-actions-test.js","dummy/tests/unit/mixins/dynamic-actions-test.jscs-test.js","dummy/tests/unit/mixins/dynamic-actions-test.jshint.js","dummy/tests/unit/mixins/dynamic-properties-test.js","dummy/tests/unit/mixins/dynamic-properties-test.jscs-test.js","dummy/tests/unit/mixins/dynamic-properties-test.jshint.js","dummy/tests/unit/mixins/leaflet-events-test.js","dummy/tests/unit/mixins/leaflet-events-test.jscs-test.js","dummy/tests/unit/mixins/leaflet-events-test.jshint.js","dummy/tests/unit/mixins/leaflet-options-test.js","dummy/tests/unit/mixins/leaflet-options-test.jscs-test.js","dummy/tests/unit/mixins/leaflet-options-test.jshint.js","dummy/tests/unit/mixins/leaflet-properties-test.js","dummy/tests/unit/mixins/leaflet-properties-test.jscs-test.js","dummy/tests/unit/mixins/leaflet-properties-test.jshint.js","dummy/tests/unit/mixins/map-route-csw-loader-test.js","dummy/tests/unit/mixins/map-route-csw-loader-test.jscs-test.js","dummy/tests/unit/mixins/map-route-csw-loader-test.jshint.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-link-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-link-test.jscs-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-link-test.jshint.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.jscs-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.jshint.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-parameter-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-parameter-test.jscs-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-parameter-test.jshint.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-layer-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-layer-test.jscs-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-layer-test.jshint.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.jscs-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.jshint.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-test.jscs-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-test.jshint.js","dummy/tests/unit/routes/edit-map-new-test.js","dummy/tests/unit/routes/edit-map-new-test.jscs-test.js","dummy/tests/unit/routes/edit-map-new-test.jshint.js","dummy/tests/unit/routes/edit-map-test.js","dummy/tests/unit/routes/edit-map-test.jscs-test.js","dummy/tests/unit/routes/edit-map-test.jshint.js","dummy/tests/unit/routes/list-map-test.js","dummy/tests/unit/routes/list-map-test.jscs-test.js","dummy/tests/unit/routes/list-map-test.jshint.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.jscs-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.jshint.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.jscs-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.jshint.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.jscs-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.jshint.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.jscs-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.jshint.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.jscs-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.jshint.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-test.jscs-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-test.jshint.js","dummy/tests/unit/services/spatial-bookmark-local-storage-test.js","dummy/tests/unit/services/spatial-bookmark-local-storage-test.jscs-test.js","dummy/tests/unit/services/spatial-bookmark-local-storage-test.jshint.js","dummy/tests/unit/utils/string-test.js","dummy/tests/unit/utils/string-test.jscs-test.js","dummy/tests/unit/utils/string-test.jshint.js","dummy/tests/views/application.jscs-test.js","dummy/tests/views/application.jshint.js","dummy/tests/views/components-examples/flexberry-maplayers/settings-example.jscs-test.js","dummy/tests/views/components-examples/flexberry-maplayers/settings-example.jshint.js","dummy/tests/views/components-examples/flexberry-tree/settings-example.jscs-test.js","dummy/tests/views/components-examples/flexberry-tree/settings-example.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('dummy/tests/adapters/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - adapters');\n  test('adapters/application.js should pass jscs', function () {\n    ok(true, 'adapters/application.js should pass jscs.');\n  });\n});","define('dummy/tests/adapters/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - adapters/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass jshint.');\n  });\n});","define('dummy/tests/app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('app.js should pass jscs', function () {\n    ok(true, 'app.js should pass jscs.');\n  });\n});","define('dummy/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('dummy/tests/components/css-picker.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/css-picker.js should pass jscs', function () {\n    ok(true, 'components/css-picker.js should pass jscs.');\n  });\n});","define('dummy/tests/components/css-picker.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/css-picker.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/css-picker.js should pass jshint.');\n  });\n});","define('dummy/tests/components/number-input.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/number-input.js should pass jscs', function () {\n    ok(true, 'components/number-input.js should pass jscs.');\n  });\n});","define('dummy/tests/components/number-input.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/number-input.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/number-input.js should pass jshint.');\n  });\n});","define('dummy/tests/components/settings-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/settings-example.js should pass jscs', function () {\n    ok(true, 'components/settings-example.js should pass jscs.');\n  });\n});","define('dummy/tests/components/settings-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/settings-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/settings-example.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/application.js should pass jscs', function () {\n    ok(true, 'controllers/application.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/application.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/components-examples/flexberry-button/settings-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers/components-examples/flexberry-button');\n  test('controllers/components-examples/flexberry-button/settings-example.js should pass jscs', function () {\n    ok(true, 'controllers/components-examples/flexberry-button/settings-example.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/components-examples/flexberry-button/settings-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/components-examples/flexberry-button/settings-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/components-examples/flexberry-button/settings-example.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/components-examples/flexberry-ddau-checkbox/settings-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers/components-examples/flexberry-ddau-checkbox');\n  test('controllers/components-examples/flexberry-ddau-checkbox/settings-example.js should pass jscs', function () {\n    ok(true, 'controllers/components-examples/flexberry-ddau-checkbox/settings-example.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/components-examples/flexberry-ddau-checkbox/settings-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/components-examples/flexberry-ddau-checkbox/settings-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/components-examples/flexberry-ddau-checkbox/settings-example.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/components-examples/flexberry-maplayers/settings-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers/components-examples/flexberry-maplayers');\n  test('controllers/components-examples/flexberry-maplayers/settings-example.js should pass jscs', function () {\n    ok(true, 'controllers/components-examples/flexberry-maplayers/settings-example.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/components-examples/flexberry-maplayers/settings-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/components-examples/flexberry-maplayers/settings-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/components-examples/flexberry-maplayers/settings-example.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/components-examples/flexberry-tree/settings-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers/components-examples/flexberry-tree');\n  test('controllers/components-examples/flexberry-tree/settings-example.js should pass jscs', function () {\n    ok(true, 'controllers/components-examples/flexberry-tree/settings-example.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/components-examples/flexberry-tree/settings-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/components-examples/flexberry-tree/settings-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/components-examples/flexberry-tree/settings-example.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/map.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/map.js should pass jscs', function () {\n    ok(true, 'controllers/map.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/map.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/map.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/map.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/map/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers/map');\n  test('controllers/map/new.js should pass jscs', function () {\n    ok(true, 'controllers/map/new.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/map/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/map/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/map/new.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/maps.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/maps.js should pass jscs', function () {\n    ok(true, 'controllers/maps.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/maps.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/maps.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/maps.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-csw-connection-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/new-platform-flexberry-g-i-s-csw-connection-e.js should pass jscs', function () {\n    ok(true, 'controllers/new-platform-flexberry-g-i-s-csw-connection-e.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-csw-connection-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/new-platform-flexberry-g-i-s-csw-connection-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/new-platform-flexberry-g-i-s-csw-connection-e.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-csw-connection-e/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers/new-platform-flexberry-g-i-s-csw-connection-e');\n  test('controllers/new-platform-flexberry-g-i-s-csw-connection-e/new.js should pass jscs', function () {\n    ok(true, 'controllers/new-platform-flexberry-g-i-s-csw-connection-e/new.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-csw-connection-e/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/new-platform-flexberry-g-i-s-csw-connection-e/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/new-platform-flexberry-g-i-s-csw-connection-e/new.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-csw-connection-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/new-platform-flexberry-g-i-s-csw-connection-l.js should pass jscs', function () {\n    ok(true, 'controllers/new-platform-flexberry-g-i-s-csw-connection-l.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-csw-connection-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/new-platform-flexberry-g-i-s-csw-connection-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/new-platform-flexberry-g-i-s-csw-connection-l.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-layer-metadata-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jscs', function () {\n    ok(true, 'controllers/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-layer-metadata-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/new-platform-flexberry-g-i-s-layer-metadata-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-layer-metadata-e/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers/new-platform-flexberry-g-i-s-layer-metadata-e');\n  test('controllers/new-platform-flexberry-g-i-s-layer-metadata-e/new.js should pass jscs', function () {\n    ok(true, 'controllers/new-platform-flexberry-g-i-s-layer-metadata-e/new.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-layer-metadata-e/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/new-platform-flexberry-g-i-s-layer-metadata-e/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/new-platform-flexberry-g-i-s-layer-metadata-e/new.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-layer-metadata-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jscs', function () {\n    ok(true, 'controllers/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-layer-metadata-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/new-platform-flexberry-g-i-s-layer-metadata-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/sitemap-node.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/sitemap-node.js should pass jscs', function () {\n    ok(true, 'controllers/sitemap-node.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/sitemap-node.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/sitemap-node.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/sitemap-node.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('dummy/tests/helpers/destroy-app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/destroy-app.js should pass jscs', function () {\n    ok(true, 'helpers/destroy-app.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/ember-i18n/test-helpers', ['exports', 'ember'], function (exports, _ember) {\n\n  // example usage: find(`.header:contains(${t('welcome_message')})`)\n  _ember['default'].Test.registerHelper('t', function (app, key, interpolations) {\n    var i18n = app.__container__.lookup('service:i18n');\n    return i18n.t(key, interpolations);\n  });\n\n  // example usage: expectTranslation('.header', 'welcome_message');\n  _ember['default'].Test.registerHelper('expectTranslation', function (app, element, key, interpolations) {\n    var text = app.testHelpers.t(key, interpolations);\n\n    assertTranslation(element, key, text);\n  });\n\n  var assertTranslation = (function () {\n    if (typeof QUnit !== 'undefined' && typeof ok === 'function') {\n      return function (element, key, text) {\n        ok(find(element + ':contains(' + text + ')').length, 'Found translation key ' + key + ' in ' + element);\n      };\n    } else if (typeof expect === 'function') {\n      return function (element, key, text) {\n        var found = !!find(element + ':contains(' + text + ')').length;\n        expect(found).to.equal(true);\n      };\n    } else {\n      return function () {\n        throw new Error(\"ember-i18n could not find a compatible test framework\");\n      };\n    }\n  })();\n});","define('dummy/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'dummy/tests/helpers/start-app', 'dummy/tests/helpers/destroy-app'], function (exports, _qunit, _dummyTestsHelpersStartApp, _dummyTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _dummyTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n\n        (0, _dummyTestsHelpersDestroyApp['default'])(this.application);\n      }\n    });\n  };\n});","define('dummy/tests/helpers/module-for-acceptance.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/module-for-acceptance.js should pass jscs', function () {\n    ok(true, 'helpers/module-for-acceptance.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/resolver', ['exports', 'dummy/resolver', 'dummy/config/environment'], function (exports, _dummyResolver, _dummyConfigEnvironment) {\n\n  var resolver = _dummyResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _dummyConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _dummyConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('dummy/tests/helpers/resolver.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/resolver.js should pass jscs', function () {\n    ok(true, 'helpers/resolver.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/config/environment'], function (exports, _ember, _dummyApp, _dummyConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _dummyConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _dummyApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('dummy/tests/helpers/start-app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/start-app.js should pass jscs', function () {\n    ok(true, 'helpers/start-app.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/to-safe-string.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/to-safe-string.js should pass jscs', function () {\n    ok(true, 'helpers/to-safe-string.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/to-safe-string.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/to-safe-string.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/to-safe-string.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/to-string.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/to-string.js should pass jscs', function () {\n    ok(true, 'helpers/to-string.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/to-string.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/to-string.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/to-string.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/validate-properties', ['exports', 'ember', 'ember-qunit'], function (exports, _ember, _emberQunit) {\n  exports.testValidPropertyValues = testValidPropertyValues;\n  exports.testInvalidPropertyValues = testInvalidPropertyValues;\n\n  var run = _ember['default'].run;\n\n  function validateValues(object, propertyName, values, isTestForValid) {\n    var promise = null;\n    var validatedValues = [];\n\n    values.forEach(function (value) {\n      function handleValidation(errors) {\n        var hasErrors = object.get('errors.' + propertyName + '.firstObject');\n        if (hasErrors && !isTestForValid || !hasErrors && isTestForValid) {\n          validatedValues.push(value);\n        }\n      }\n\n      run(object, 'set', propertyName, value);\n\n      var objectPromise = null;\n      run(function () {\n        objectPromise = object.validate().then(handleValidation, handleValidation);\n      });\n\n      // Since we are setting the values in a different run loop as we are validating them,\n      // we need to chain the promises so that they run sequentially. The wrong value will\n      // be validated if the promises execute concurrently\n      promise = promise ? promise.then(objectPromise) : objectPromise;\n    });\n\n    return promise.then(function () {\n      return validatedValues;\n    });\n  }\n\n  function testPropertyValues(propertyName, values, isTestForValid, context) {\n    var validOrInvalid = isTestForValid ? 'Valid' : 'Invalid';\n    var testName = validOrInvalid + ' ' + propertyName;\n\n    (0, _emberQunit.test)(testName, function (assert) {\n      var object = this.subject();\n\n      if (context && typeof context === 'function') {\n        context(object);\n      }\n\n      // Use QUnit.dump.parse so null and undefined can be printed as literal 'null' and\n      // 'undefined' strings in the assert message.\n      var valuesString = QUnit.dump.parse(values).replace(/\\n(\\s+)?/g, '').replace(/,/g, ', ');\n      var assertMessage = 'Expected ' + propertyName + ' to have ' + validOrInvalid.toLowerCase() + ' values: ' + valuesString;\n\n      return validateValues(object, propertyName, values, isTestForValid).then(function (validatedValues) {\n        assert.deepEqual(validatedValues, values, assertMessage);\n      });\n    });\n  }\n\n  function testValidPropertyValues(propertyName, values, context) {\n    testPropertyValues(propertyName, values, true, context);\n  }\n\n  function testInvalidPropertyValues(propertyName, values, context) {\n    testPropertyValues(propertyName, values, false, context);\n  }\n});","define('dummy/tests/initializers/spatial-bookmark-storage.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - initializers');\n  test('initializers/spatial-bookmark-storage.js should pass jscs', function () {\n    ok(true, 'initializers/spatial-bookmark-storage.js should pass jscs.');\n  });\n});","define('dummy/tests/initializers/spatial-bookmark-storage.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - initializers/spatial-bookmark-storage.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'initializers/spatial-bookmark-storage.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/flexberry-ddau-checkbox-test', ['exports', 'ember', 'ember-flexberry-gis/components/flexberry-ddau-checkbox', 'ember-flexberry-gis/mixins/flexberry-ddau-checkbox-actions-handler', 'ember-qunit'], function (exports, _ember, _emberFlexberryGisComponentsFlexberryDdauCheckbox, _emberFlexberryGisMixinsFlexberryDdauCheckboxActionsHandler, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('flexberry-ddau-checkbox', 'Integration | Component | flexberry-ddau-checkbox', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('Component renders properly', function (assert) {\n    assert.expect(17);\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 55\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'flexberry-ddau-checkbox', [], ['caption', ['subexpr', '@mut', [['get', 'caption', ['loc', [null, [1, 34], [1, 41]]]]], [], []], 'class', ['subexpr', '@mut', [['get', 'class', ['loc', [null, [1, 48], [1, 53]]]]], [], []]], ['loc', [null, [1, 0], [1, 55]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    // Retrieve component, it's inner <input> & <label>.\n    var $component = this.$().children();\n    var $checkboxInput = $component.children('input');\n    var $checkboxCaption = $component.children('label');\n\n    var flexberryClassNames = _emberFlexberryGisComponentsFlexberryDdauCheckbox['default'].flexberryClassNames;\n\n    // Check wrapper <div>.\n    assert.strictEqual($component.prop('tagName'), 'DIV', 'Component\\'s wrapper is a <div>');\n    assert.strictEqual($component.hasClass(flexberryClassNames.wrapper), true, 'Component\\'s container has \\'' + flexberryClassNames.wrapper + '\\' css-class');\n    assert.strictEqual($component.hasClass('ui'), true, 'Component\\'s wrapper has \\'ui\\' css-class');\n    assert.strictEqual($component.hasClass('checkbox'), true, 'Component\\'s wrapper has \\'checkbox\\' css-class');\n\n    // Check <input>.\n    assert.strictEqual($checkboxInput.length === 1, true, 'Component has inner <input>');\n    assert.strictEqual($checkboxInput.attr('type'), 'checkbox', 'Component\\'s inner <input> is of checkbox type');\n    assert.strictEqual($checkboxInput.hasClass(flexberryClassNames.checkboxInput), true, 'Component\\'s inner checkbox <input> has \\'' + flexberryClassNames.checkboxInput + '\\' css-class');\n    assert.strictEqual($checkboxInput.hasClass('hidden'), true, 'Component\\'s inner checkbox <input> has \\'hidden\\' css-class');\n    assert.strictEqual($checkboxInput.prop('checked'), false, 'Component\\'s inner checkbox <input> isn\\'t checked');\n\n    // Check caption's <label>.\n    assert.strictEqual($checkboxCaption.length === 1, true, 'Component has inner <label>');\n    assert.strictEqual($checkboxCaption.hasClass(flexberryClassNames.checkboxCaption), true, 'Component\\'s inner <label> has \\'' + flexberryClassNames.checkboxCaption + '\\' css-class');\n    assert.strictEqual(_ember['default'].$.trim($checkboxCaption.text()).length === 0, true, 'Component\\'s inner <label> is empty by default');\n\n    var checkboxCaptionText = 'Checkbox caption';\n    this.set('caption', checkboxCaptionText);\n    assert.strictEqual(_ember['default'].$.trim($checkboxCaption.text()), checkboxCaptionText, 'Component\\'s inner <label> text changes when component\\'s \\'caption\\' property changes');\n\n    // Check wrapper's additional CSS-classes.\n    var additioanlCssClasses = 'additional-css-class-name and-another-one';\n    this.set('class', additioanlCssClasses);\n\n    _ember['default'].A(additioanlCssClasses.split(' ')).forEach(function (cssClassName, index) {\n      assert.strictEqual($component.hasClass(cssClassName), true, 'Component\\'s wrapper has additional css class \\'' + cssClassName + '\\'');\n    });\n\n    this.set('class', '');\n    _ember['default'].A(additioanlCssClasses.split(' ')).forEach(function (cssClassName, index) {\n      assert.strictEqual($component.hasClass(cssClassName), false, 'Component\\'s wrapper hasn\\'t additional css class \\'' + cssClassName + '\\'');\n    });\n  });\n\n  (0, _emberQunit.test)('Component invokes actions', function (assert) {\n    assert.expect(3);\n\n    var latestEventObjects = {\n      change: null\n    };\n\n    // Bind component's action handlers.\n    this.set('actions.onFlagChange', function (e) {\n      latestEventObjects.change = e;\n    });\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 58\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'flexberry-ddau-checkbox', [], ['change', ['subexpr', 'action', ['onFlagChange'], [], ['loc', [null, [1, 33], [1, 56]]]]], ['loc', [null, [1, 0], [1, 58]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    // Retrieve component.\n    var $component = this.$().children();\n\n    assert.strictEqual(latestEventObjects.change, null, 'Component\\'s \\'change\\' action wasn\\'t invoked before click');\n\n    // Imitate first click on component.\n    $component.click();\n    assert.notStrictEqual(latestEventObjects.change, null, 'Component\\'s \\'change\\' action was invoked after first click');\n\n    // Imitate second click on component.\n    latestEventObjects.change = null;\n    $component.click();\n    assert.notStrictEqual(latestEventObjects.change, null, 'Component\\'s \\'change\\' action was invoked after second click');\n  });\n\n  (0, _emberQunit.test)('Component doesn\\'t change binded value (without \\'change\\' action handler)', function (assert) {\n    // Mock Ember.assert method.\n    var thrownExceptions = _ember['default'].A();\n    var originalEmberAssert = _ember['default'].assert;\n    _ember['default'].assert = function () {\n      try {\n        originalEmberAssert.apply(undefined, arguments);\n      } catch (ex) {\n        thrownExceptions.pushObject(ex);\n      }\n    };\n\n    assert.expect(4);\n\n    this.set('flag', false);\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 38\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'flexberry-ddau-checkbox', [], ['value', ['subexpr', '@mut', [['get', 'flag', ['loc', [null, [1, 32], [1, 36]]]]], [], []]], ['loc', [null, [1, 0], [1, 38]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    // Retrieve component & it's inner <input>.\n    var $component = this.$().children();\n    var $checkboxInput = $component.children('input');\n\n    // Check component's initial state.\n    assert.strictEqual($checkboxInput.prop('checked'), false, 'Component\\'s inner checkbox <input> isn\\'t checked before click');\n\n    // Imitate click on component & check for exception.\n    $component.click();\n\n    // Check component's state after click (it should be changed).\n    assert.strictEqual($checkboxInput.prop('checked'), true, 'Component\\'s inner checkbox <input> isn\\'t checked after click (without \\'change\\' action handler)');\n\n    // Check binded value state after click (it should be unchanged, because 'change' action handler is not defined).\n    assert.strictEqual(this.get('flag'), false, 'Component doesn\\'t change binded value (without \\'change\\' action handler)');\n\n    assert.strictEqual(thrownExceptions.length === 1 && /.*required.*change.*action.*not.*defined.*/gi.test(thrownExceptions[0].message), true, 'Component throws single exception if \\'change\\' action handler is not defined');\n\n    // Clean up after mock Ember.assert.\n    _ember['default'].assert = originalEmberAssert;\n  });\n\n  (0, _emberQunit.test)('Component changes binded value (with \\'change\\' action handler)', function (assert) {\n    var _this = this;\n\n    assert.expect(7);\n\n    this.set('flag', false);\n\n    // Bind component's 'change' action handler.\n    this.set('actions.onFlagChange', function (e) {\n      assert.strictEqual(e.originalEvent.target.id, _this.$('input')[0].id);\n      _this.set('flag', e.newValue);\n    });\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 69\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'flexberry-ddau-checkbox', [], ['value', ['subexpr', '@mut', [['get', 'flag', ['loc', [null, [1, 32], [1, 36]]]]], [], []], 'change', ['subexpr', 'action', ['onFlagChange'], [], ['loc', [null, [1, 44], [1, 67]]]]], ['loc', [null, [1, 0], [1, 69]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    // Retrieve component & it's inner <input>.\n    var $component = this.$().children();\n    var $checkboxInput = $component.children('input');\n\n    // Check component's initial state.\n    assert.strictEqual($checkboxInput.prop('checked'), false, 'Component\\'s inner checkbox <input> isn\\'t checked before click');\n\n    // Make component checked.\n    $component.click();\n    assert.strictEqual($checkboxInput.prop('checked'), true, 'Component\\'s inner checkbox <input> is checked after click (with \\'change\\' action handler)');\n    assert.strictEqual(this.get('flag'), true, 'Component\\'s binded value changed (with \\'change\\' action handler)');\n\n    // Make component unchecked.\n    $component.click();\n    assert.strictEqual($checkboxInput.prop('checked'), false, 'Component\\'s inner checkbox <input> is unchecked after second click (with \\'change\\' action handler)');\n    assert.strictEqual(this.get('flag'), false, 'Component\\' binded value changed after second click (with \\'change\\' action handler)');\n  });\n\n  (0, _emberQunit.test)('Component changes binded value (with \\'change\\' action handler from special mixin)', function (assert) {\n    assert.expect(5);\n\n    this.set('flag', false);\n\n    // Bind component's 'change' action handler from specialized mixin.\n    this.set('actions.onCheckboxChange', _emberFlexberryGisMixinsFlexberryDdauCheckboxActionsHandler['default'].mixins[0].properties.actions.onCheckboxChange);\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 80\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'flexberry-ddau-checkbox', [], ['value', ['subexpr', '@mut', [['get', 'flag', ['loc', [null, [1, 32], [1, 36]]]]], [], []], 'change', ['subexpr', 'action', ['onCheckboxChange', 'flag'], [], ['loc', [null, [1, 44], [1, 78]]]]], ['loc', [null, [1, 0], [1, 80]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    // Retrieve component & it's inner <input>.\n    var $component = this.$().children();\n    var $checkboxInput = $component.children('input');\n\n    // Check component's initial state.\n    assert.strictEqual($checkboxInput.prop('checked'), false, 'Component\\'s inner checkbox <input> isn\\'t checked before click');\n\n    // Make component checked.\n    $component.click();\n    assert.strictEqual($checkboxInput.prop('checked'), true, 'Component\\'s inner checkbox <input> is checked after click (with \\'change\\' action handler from special mixin)');\n    assert.strictEqual(this.get('flag'), true, 'Component changed binded value (with \\'change\\' action handler from special mixin)');\n\n    // Make component unchecked.\n    $component.click();\n    assert.strictEqual($checkboxInput.prop('checked'), false, 'Component\\'s inner checkbox <input> is unchecked after second click (with \\'change\\' action handler from special mixin)');\n    assert.strictEqual(this.get('flag'), false, 'Component changed binded value after second click (with \\'change\\' action handler from special mixin)');\n  });\n\n  (0, _emberQunit.test)('Component works properly in readonly mode', function (assert) {\n    assert.expect(9);\n\n    var latestEventObjects = {\n      change: null\n    };\n\n    // Bind component's action handlers.\n    this.set('actions.onFlagChange', function (e) {\n      latestEventObjects.change = e;\n    });\n\n    // Render component in readonly mode.\n    this.set('flag', false);\n    this.set('readonly', true);\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 87\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'flexberry-ddau-checkbox', [], ['value', ['subexpr', '@mut', [['get', 'flag', ['loc', [null, [1, 32], [1, 36]]]]], [], []], 'readonly', ['subexpr', '@mut', [['get', 'readonly', ['loc', [null, [1, 46], [1, 54]]]]], [], []], 'change', ['subexpr', 'action', ['onFlagChange'], [], ['loc', [null, [1, 62], [1, 85]]]]], ['loc', [null, [1, 0], [1, 87]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    // Retrieve component & it's inner <input>.\n    var $component = this.$().children();\n    var $checkboxInput = $component.children('input');\n\n    // Check component's initial state.\n    assert.strictEqual($checkboxInput.prop('checked'), false, 'Component\\'s inner checkbox <input> isn\\'t checked before click');\n\n    // Imitate click on component.\n    $component.click();\n\n    // Check after click state.\n    assert.strictEqual($checkboxInput.prop('checked'), false, 'Component\\'s inner checkbox <input> isn\\'t checked after click');\n    assert.strictEqual(latestEventObjects.change, null, 'Component doesn\\'t send \\'change\\' action in readonly mode');\n\n    // Disable readonly mode.\n    this.set('readonly', false);\n\n    // Imitate click on component.\n    $component.click();\n\n    // Check after click state.\n    assert.strictEqual($checkboxInput.prop('checked'), true, 'Component\\'s inner checkbox <input> is checked after click');\n    assert.notStrictEqual(latestEventObjects.change, null, 'Component send \\'change\\' action after readonly mode disabling');\n\n    latestEventObjects.change = null;\n\n    // Imitate click on component.\n    $component.click();\n\n    // Check after click state.\n    assert.strictEqual($checkboxInput.prop('checked'), false, 'Component\\'s inner checkbox <input> is unchecked after click');\n    assert.notStrictEqual(latestEventObjects.change, null, 'Component send \\'change\\' action after readonly mode disabling');\n\n    latestEventObjects.change = null;\n\n    // Enable readonly mode again.\n    this.set('readonly', true);\n\n    // Imitate click on component.\n    $component.click();\n\n    // Check after click state.\n    assert.strictEqual($checkboxInput.prop('checked'), false, 'Component\\'s inner checkbox <input> isn\\'t checked after click');\n    assert.strictEqual(latestEventObjects.change, null, 'Component doesn\\'t send \\'change\\' action in readonly mode');\n  });\n});","define('dummy/tests/integration/components/flexberry-ddau-checkbox-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/flexberry-ddau-checkbox-test.js should pass jscs', function () {\n    ok(true, 'integration/components/flexberry-ddau-checkbox-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/flexberry-ddau-checkbox-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/flexberry-ddau-checkbox-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/flexberry-ddau-checkbox-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/flexberry-layers-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('flexberry-layers', 'Integration | Component | flexberry layers', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 20\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'flexberry-layers', ['loc', [null, [1, 0], [1, 20]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n  });\n});","define('dummy/tests/integration/components/flexberry-layers-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/flexberry-layers-test.js should pass jscs', function () {\n    ok(true, 'integration/components/flexberry-layers-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/flexberry-layers-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/flexberry-layers-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/flexberry-layers-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/flexberry-map-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('flexberry-map', 'Integration | Component | flexberry map', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    assert.expect(0);\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 17\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'flexberry-map', ['loc', [null, [1, 0], [1, 17]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.4.6',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'flexberry-map', [], ['model', ['subexpr', '@mut', [['get', 'model', ['loc', [null, [2, 27], [2, 32]]]]], [], []]], 0, null, ['loc', [null, [2, 4], [4, 22]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n  });\n});","define('dummy/tests/integration/components/flexberry-map-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/flexberry-map-test.js should pass jscs', function () {\n    ok(true, 'integration/components/flexberry-map-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/flexberry-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/flexberry-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/flexberry-map-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/flexberry-maptoolbar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('flexberry-maptoolbar', 'Integration | Component | flexberry maptoolbar', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 24\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'flexberry-maptoolbar', ['loc', [null, [1, 0], [1, 24]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.4.6',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'flexberry-maptoolbar', [], [], 0, null, ['loc', [null, [2, 4], [4, 29]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/flexberry-maptoolbar-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/flexberry-maptoolbar-test.js should pass jscs', function () {\n    ok(true, 'integration/components/flexberry-maptoolbar-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/flexberry-maptoolbar-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/flexberry-maptoolbar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/flexberry-maptoolbar-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/layers/group-layer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('layers/group-layer', 'Integration | Component | layers/group layer', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n    this.set('leafletContainer', L.layerGroup());\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 56\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'layers/group-layer', [], ['leafletContainer', ['subexpr', '@mut', [['get', 'leafletContainer', ['loc', [null, [1, 38], [1, 54]]]]], [], []]], ['loc', [null, [1, 0], [1, 56]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n  });\n});","define('dummy/tests/integration/components/layers/group-layer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components/layers');\n  test('integration/components/layers/group-layer-test.js should pass jscs', function () {\n    ok(true, 'integration/components/layers/group-layer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/layers/group-layer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/layers/group-layer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/layers/group-layer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/legends/wms-legend-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('legends/wms-legend', 'Integration | Component | legends/wms legend', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    assert.expect(2);\n\n    this.set('testLayer', {\n      settingsAsObject: {\n        url: 'http://212.192.76.235:8080/geoserver/wms',\n        layers: 'lesonas1969:goszem,lesonas1969:river,lesonas1969:kvartal'\n      }\n    });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 63\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'legends/wms-legend', [], ['layerSettings', ['subexpr', '@mut', [['get', 'testLayer.settingsAsObject', ['loc', [null, [1, 35], [1, 61]]]]], [], []]], ['loc', [null, [1, 0], [1, 63]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    var $images = this.$('img');\n    var expectedSrc = 'http://212.192.76.235:8080/geoserver/wms?service=WMS&request=GetLegendGraphic&version=1.1.0&format=image%2Fpng&layer=lesonas1969%3Agoszem';\n\n    assert.equal($images.size(), 3, 'Images for all defined layers are rendered');\n    assert.equal($images.first().attr('src'), expectedSrc, 'Image\\'s \\'src\\' attribute computed as expected');\n  });\n});","define('dummy/tests/integration/components/legends/wms-legend-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components/legends');\n  test('integration/components/legends/wms-legend-test.js should pass jscs', function () {\n    ok(true, 'integration/components/legends/wms-legend-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/legends/wms-legend-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/legends/wms-legend-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/legends/wms-legend-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/minimap-control-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('minimap-control', 'Integration | Component | minimap control', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('template return L.layerGroup', function (assert) {\n\n    assert.expect(1);\n\n    this.set('layerGroupClass', L.LayerGroup);\n\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.4.6',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('       ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement('div');\n            dom.setAttribute(el1, 'class', 'layerG-body');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var element0 = dom.childAt(fragment, [1]);\n            var morphs = new Array(1);\n            morphs[0] = dom.createAttrMorph(element0, 'is-layergroup');\n            return morphs;\n          },\n          statements: [['attribute', 'is-layergroup', ['concat', [['subexpr', 'instance-of', [['get', 'layerG', ['loc', [null, [3, 61], [3, 67]]]], ['get', 'layerGroupClass', ['loc', [null, [3, 68], [3, 83]]]]], [], ['loc', [null, [3, 47], [3, 85]]]]]]]],\n          locals: ['layerG'],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'minimap-control', [], [], 0, null, ['loc', [null, [2, 4], [4, 24]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.ok(this.$('div.layerG-body').attr('is-layergroup'));\n  });\n});","define('dummy/tests/integration/components/minimap-control-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/minimap-control-test.js should pass jscs', function () {\n    ok(true, 'integration/components/minimap-control-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/minimap-control-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/minimap-control-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/minimap-control-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/spatial-bookmark-test', ['exports', 'ember', 'ember-qunit', 'ember-flexberry-gis/services/spatial-bookmark-local-storage', 'ember-i18n/services/i18n', 'ember-flexberry-gis/locales/ru/translations', 'ember-flexberry-gis/locales/en/translations'], function (exports, _ember, _emberQunit, _emberFlexberryGisServicesSpatialBookmarkLocalStorage, _emberI18nServicesI18n, _emberFlexberryGisLocalesRuTranslations, _emberFlexberryGisLocalesEnTranslations) {\n\n  (0, _emberQunit.moduleForComponent)('spatial-bookmark', 'Integration | Component | space bookmark', {\n    beforeEach: function beforeEach(assert) {\n      this.register('locale:ru/translations', _emberFlexberryGisLocalesRuTranslations['default']);\n      this.register('locale:en/translations', _emberFlexberryGisLocalesEnTranslations['default']);\n      this.register('service:i18n', _emberI18nServicesI18n['default']);\n\n      this.inject.service('i18n', { as: 'i18n' });\n      _ember['default'].Component.reopen({\n        i18n: _ember['default'].inject.service('i18n')\n      });\n\n      this.set('i18n.locale', 'ru');\n\n      this.register('service:spatial-bookmark-local-storage', _emberFlexberryGisServicesSpatialBookmarkLocalStorage['default']);\n\n      this.inject.service('spatial-bookmark-local-storage', { as: 'storage-service' });\n      _ember['default'].Component.reopen({\n        'storage-service': _ember['default'].inject.service('spatial-bookmark-local-storage')\n      });\n    },\n\n    afterEach: function afterEach() {\n      _ember['default'].Component.reopen({\n        'storage-service': undefined\n      });\n    },\n\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 20\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'spatial-bookmark', ['loc', [null, [1, 0], [1, 20]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n    assert.equal(this.$().text().trim(), 'Добавить в закладки');\n  });\n});","define('dummy/tests/integration/components/spatial-bookmark-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/spatial-bookmark-test.js should pass jscs', function () {\n    ok(true, 'integration/components/spatial-bookmark-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/spatial-bookmark-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/spatial-bookmark-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/spatial-bookmark-test.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-csw-connection-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/new-platform-flexberry-g-i-s-csw-connection-e.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/new-platform-flexberry-g-i-s-csw-connection-e.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-csw-connection-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/new-platform-flexberry-g-i-s-csw-connection-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/new-platform-flexberry-g-i-s-csw-connection-e.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-csw-connection-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/new-platform-flexberry-g-i-s-csw-connection-l.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/new-platform-flexberry-g-i-s-csw-connection-l.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-csw-connection-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/new-platform-flexberry-g-i-s-csw-connection-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/new-platform-flexberry-g-i-s-csw-connection-l.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-map-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/new-platform-flexberry-g-i-s-map-e.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/new-platform-flexberry-g-i-s-map-e.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-map-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/new-platform-flexberry-g-i-s-map-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/new-platform-flexberry-g-i-s-map-e.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-map-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/new-platform-flexberry-g-i-s-map-l.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/new-platform-flexberry-g-i-s-map-l.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-map-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/new-platform-flexberry-g-i-s-map-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/new-platform-flexberry-g-i-s-map-l.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/translations.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en');\n  test('locales/en/translations.js should pass jscs', function () {\n    ok(true, 'locales/en/translations.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/translations.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/translations.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/translations.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-csw-connection-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/new-platform-flexberry-g-i-s-csw-connection-e.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/new-platform-flexberry-g-i-s-csw-connection-e.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-csw-connection-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/new-platform-flexberry-g-i-s-csw-connection-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/new-platform-flexberry-g-i-s-csw-connection-e.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-csw-connection-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/new-platform-flexberry-g-i-s-csw-connection-l.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/new-platform-flexberry-g-i-s-csw-connection-l.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-csw-connection-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/new-platform-flexberry-g-i-s-csw-connection-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/new-platform-flexberry-g-i-s-csw-connection-l.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-map-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/new-platform-flexberry-g-i-s-map-e.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/new-platform-flexberry-g-i-s-map-e.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-map-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/new-platform-flexberry-g-i-s-map-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/new-platform-flexberry-g-i-s-map-e.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-map-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/new-platform-flexberry-g-i-s-map-l.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/new-platform-flexberry-g-i-s-map-l.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-map-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/new-platform-flexberry-g-i-s-map-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/new-platform-flexberry-g-i-s-map-l.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/translations.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru');\n  test('locales/ru/translations.js should pass jscs', function () {\n    ok(true, 'locales/ru/translations.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/translations.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/translations.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/translations.js should pass jshint.');\n  });\n});","define('dummy/tests/mixins/edit-form-controller-operations-indication.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/edit-form-controller-operations-indication.js should pass jscs', function () {\n    ok(true, 'mixins/edit-form-controller-operations-indication.js should pass jscs.');\n  });\n});","define('dummy/tests/mixins/edit-form-controller-operations-indication.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/edit-form-controller-operations-indication.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/edit-form-controller-operations-indication.js should pass jshint.');\n  });\n});","define('dummy/tests/mixins/edit-form-route-operations-indication.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/edit-form-route-operations-indication.js should pass jscs', function () {\n    ok(true, 'mixins/edit-form-route-operations-indication.js should pass jscs.');\n  });\n});","define('dummy/tests/mixins/edit-form-route-operations-indication.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/edit-form-route-operations-indication.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/edit-form-route-operations-indication.js should pass jshint.');\n  });\n});","define('dummy/tests/models/components-examples/flexberry-ddau-checkbox/settings-example/base.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models/components-examples/flexberry-ddau-checkbox/settings-example');\n  test('models/components-examples/flexberry-ddau-checkbox/settings-example/base.js should pass jscs', function () {\n    ok(true, 'models/components-examples/flexberry-ddau-checkbox/settings-example/base.js should pass jscs.');\n  });\n});","define('dummy/tests/models/components-examples/flexberry-ddau-checkbox/settings-example/base.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/components-examples/flexberry-ddau-checkbox/settings-example/base.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/components-examples/flexberry-ddau-checkbox/settings-example/base.js should pass jshint.');\n  });\n});","define('dummy/tests/models/custom-inflector-rules.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/custom-inflector-rules.js should pass jscs', function () {\n    ok(true, 'models/custom-inflector-rules.js should pass jscs.');\n  });\n});","define('dummy/tests/models/custom-inflector-rules.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/custom-inflector-rules.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/custom-inflector-rules.js should pass jshint.');\n  });\n});","define('dummy/tests/resolver.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('resolver.js should pass jscs', function () {\n    ok(true, 'resolver.js should pass jscs.');\n  });\n});","define('dummy/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('dummy/tests/router.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('router.js should pass jscs', function () {\n    ok(true, 'router.js should pass jscs.');\n  });\n});","define('dummy/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/application.js should pass jscs', function () {\n    ok(true, 'routes/application.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/components-examples/flexberry-button/settings-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes/components-examples/flexberry-button');\n  test('routes/components-examples/flexberry-button/settings-example.js should pass jscs', function () {\n    ok(true, 'routes/components-examples/flexberry-button/settings-example.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/components-examples/flexberry-button/settings-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/components-examples/flexberry-button/settings-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/components-examples/flexberry-button/settings-example.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/components-examples/flexberry-ddau-checkbox/settings-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes/components-examples/flexberry-ddau-checkbox');\n  test('routes/components-examples/flexberry-ddau-checkbox/settings-example.js should pass jscs', function () {\n    ok(true, 'routes/components-examples/flexberry-ddau-checkbox/settings-example.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/components-examples/flexberry-ddau-checkbox/settings-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/components-examples/flexberry-ddau-checkbox/settings-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/components-examples/flexberry-ddau-checkbox/settings-example.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/components-examples/flexberry-maplayers/settings-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes/components-examples/flexberry-maplayers');\n  test('routes/components-examples/flexberry-maplayers/settings-example.js should pass jscs', function () {\n    ok(true, 'routes/components-examples/flexberry-maplayers/settings-example.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/components-examples/flexberry-maplayers/settings-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/components-examples/flexberry-maplayers/settings-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/components-examples/flexberry-maplayers/settings-example.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/components-examples/flexberry-tree/settings-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes/components-examples/flexberry-tree');\n  test('routes/components-examples/flexberry-tree/settings-example.js should pass jscs', function () {\n    ok(true, 'routes/components-examples/flexberry-tree/settings-example.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/components-examples/flexberry-tree/settings-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/components-examples/flexberry-tree/settings-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/components-examples/flexberry-tree/settings-example.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/index.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/index.js should pass jscs', function () {\n    ok(true, 'routes/index.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/map.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/map.js should pass jscs', function () {\n    ok(true, 'routes/map.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/map.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/map.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/map.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/map/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes/map');\n  test('routes/map/new.js should pass jscs', function () {\n    ok(true, 'routes/map/new.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/map/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/map/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/map/new.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/maps.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/maps.js should pass jscs', function () {\n    ok(true, 'routes/maps.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/maps.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/maps.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/maps.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-csw-connection-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/new-platform-flexberry-g-i-s-csw-connection-e.js should pass jscs', function () {\n    ok(true, 'routes/new-platform-flexberry-g-i-s-csw-connection-e.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-csw-connection-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/new-platform-flexberry-g-i-s-csw-connection-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/new-platform-flexberry-g-i-s-csw-connection-e.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-csw-connection-e/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes/new-platform-flexberry-g-i-s-csw-connection-e');\n  test('routes/new-platform-flexberry-g-i-s-csw-connection-e/new.js should pass jscs', function () {\n    ok(true, 'routes/new-platform-flexberry-g-i-s-csw-connection-e/new.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-csw-connection-e/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/new-platform-flexberry-g-i-s-csw-connection-e/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/new-platform-flexberry-g-i-s-csw-connection-e/new.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-csw-connection-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/new-platform-flexberry-g-i-s-csw-connection-l.js should pass jscs', function () {\n    ok(true, 'routes/new-platform-flexberry-g-i-s-csw-connection-l.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-csw-connection-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/new-platform-flexberry-g-i-s-csw-connection-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/new-platform-flexberry-g-i-s-csw-connection-l.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-layer-metadata-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jscs', function () {\n    ok(true, 'routes/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-layer-metadata-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/new-platform-flexberry-g-i-s-layer-metadata-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-layer-metadata-e/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes/new-platform-flexberry-g-i-s-layer-metadata-e');\n  test('routes/new-platform-flexberry-g-i-s-layer-metadata-e/new.js should pass jscs', function () {\n    ok(true, 'routes/new-platform-flexberry-g-i-s-layer-metadata-e/new.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-layer-metadata-e/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/new-platform-flexberry-g-i-s-layer-metadata-e/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/new-platform-flexberry-g-i-s-layer-metadata-e/new.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-layer-metadata-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jscs', function () {\n    ok(true, 'routes/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-layer-metadata-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/new-platform-flexberry-g-i-s-layer-metadata-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jshint.');\n  });\n});","define('dummy/tests/serializers/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/application.js should pass jscs', function () {\n    ok(true, 'serializers/application.js should pass jscs.');\n  });\n});","define('dummy/tests/serializers/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/application.js should pass jshint.');\n  });\n});","define('dummy/tests/services/store.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - services');\n  test('services/store.js should pass jscs', function () {\n    ok(true, 'services/store.js should pass jscs.');\n  });\n});","define('dummy/tests/services/store.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - services/store.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/store.js should pass jshint.');\n  });\n});","define('dummy/tests/test-helper', ['exports', 'dummy/tests/helpers/resolver', 'ember-qunit'], function (exports, _dummyTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_dummyTestsHelpersResolver['default']);\n});","define('dummy/tests/test-helper.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('test-helper.js should pass jscs', function () {\n    ok(true, 'test-helper.js should pass jscs.');\n  });\n});","define('dummy/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/base-control-test', ['exports', 'ember-qunit', 'sinon'], function (exports, _emberQunit, _sinon) {\n\n  (0, _emberQunit.moduleForComponent)('base-control', 'Unit | Component | base control', {\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it should call map.addControl method on initControl', function (assert) {\n    var addControl = _sinon['default'].spy();\n    var component = this.subject({ map: { addControl: addControl } });\n\n    component.initControl();\n\n    assert.ok(addControl.calledOnce);\n  });\n});","define('dummy/tests/unit/components/base-control-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components');\n  test('unit/components/base-control-test.js should pass jscs', function () {\n    ok(true, 'unit/components/base-control-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/base-control-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/base-control-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/base-control-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/base-layer-test', ['exports', 'ember-qunit', 'sinon'], function (exports, _emberQunit, _sinon) {\n\n  (0, _emberQunit.moduleForComponent)('base-layer', 'Unit | Component | base layer', {\n    unit: true\n  });\n\n  // stubs for createLayer method\n  var layer = {};\n  var createLayer = function createLayer() {\n    return layer;\n  };\n\n  (0, _emberQunit.test)('it should throw at init', function (assert) {\n    var _this = this;\n\n    assert.throws(function () {\n      _this.subject();\n    });\n  });\n\n  (0, _emberQunit.test)('it should call layer.setZIndex on _setLayerZIndex', function (assert) {\n    assert.expect(1);\n\n    var setZIndex = _sinon['default'].spy();\n    var component = this.subject({\n      createLayer: function createLayer() {\n        return {\n          setZIndex: setZIndex\n        };\n      }\n    });\n\n    var leafletLayerPromiseResolved = assert.async();\n    component.get('_leafletLayerPromise').then(function (leafletLayer) {\n      component._setLayerZIndex();\n      assert.ok(setZIndex.called);\n    })['finally'](function () {\n      leafletLayerPromiseResolved();\n    });\n  });\n\n  (0, _emberQunit.test)('should call _setLayerVisibility and _setLayerZIndex on render', function (assert) {\n    assert.expect(2);\n\n    var setLayerVisibility = _sinon['default'].spy();\n    var setLayerZIndex = _sinon['default'].spy();\n\n    var component = this.subject({\n      createLayer: createLayer,\n      _setLayerVisibility: setLayerVisibility,\n      _setLayerZIndex: setLayerZIndex\n    });\n\n    this.render();\n\n    var leafletLayerPromiseResolved = assert.async();\n    component.get('_leafletLayerPromise').then(function (leafletLayer) {\n      assert.ok(setLayerVisibility.called, 'should call visibilityDidChange');\n      assert.ok(setLayerZIndex.called, 'should call setZIndex');\n    })['finally'](function () {\n      leafletLayerPromiseResolved();\n    });\n  });\n\n  (0, _emberQunit.test)('should call container addLayer/removeLayer based on visibility property', function (assert) {\n    assert.expect(4);\n\n    var addLayer = _sinon['default'].spy();\n    var removeLayer = _sinon['default'].spy();\n\n    var leafletContainerHasLayer = false;\n    var hasLayer = function hasLayer() {\n      return leafletContainerHasLayer;\n    };\n\n    var component = this.subject({\n      createLayer: createLayer,\n\n      leafletContainer: {\n        addLayer: addLayer,\n        removeLayer: removeLayer,\n        hasLayer: hasLayer\n      }\n    });\n\n    var leafletLayerPromiseResolved = assert.async();\n    component.get('_leafletLayerPromise').then(function (leafletLayer) {\n      component.set('visibility', true);\n\n      assert.ok(addLayer.calledOnce, 'addLayer should be called once');\n      assert.ok(addLayer.calledWith(layer), 'addLayer should be called with layer instance');\n\n      leafletContainerHasLayer = true;\n      component.set('visibility', false);\n\n      assert.ok(removeLayer.calledOnce, 'removeLayer should be called once');\n      assert.ok(removeLayer.calledWith(layer), 'removeLayer should be called with layer instance');\n    })['finally'](function () {\n      leafletLayerPromiseResolved();\n    });\n  });\n});","define('dummy/tests/unit/components/base-layer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components');\n  test('unit/components/base-layer-test.js should pass jscs', function () {\n    ok(true, 'unit/components/base-layer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/base-layer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/base-layer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/base-layer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/flexberry-map-test', ['exports', 'ember', 'ember-qunit'], function (exports, _ember, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('flexberry-map', 'Unit | Component | flexberry map', {\n    unit: true,\n    needs: ['component:flexberry-layers']\n  });\n\n  (0, _emberQunit.test)('it should create leaflet map on didInsertElement', function (assert) {\n    var component = this.subject();\n    this.render();\n    assert.ok(component.get('_leafletObject') instanceof L.Map);\n  });\n\n  (0, _emberQunit.test)('should compute center from lat/lng', function (assert) {\n    var lat = 10;\n    var lng = 10;\n\n    var component = this.subject({ lat: lat, lng: lng });\n\n    var center = component.get('center');\n    assert.ok(center instanceof L.LatLng);\n    assert.ok(center.equals([10, 10]));\n  });\n\n  (0, _emberQunit.test)('should pass center/zoom from properties to leaflet map', function (assert) {\n    assert.expect(4);\n\n    var component = this.subject({\n      lat: 10,\n      lng: 10,\n      zoom: 10\n    });\n\n    this.render();\n\n    var leafletMap = component.get('_leafletObject');\n\n    assert.equal(leafletMap.getZoom(), 10);\n    assert.ok(leafletMap.getCenter().equals([10, 10]));\n\n    _ember['default'].run(function () {\n      component.set('zoom', 0);\n    });\n\n    assert.equal(leafletMap.getZoom(), 0);\n\n    // after update to leaflet-1.0.0 panTo not directly change center,\n    // it will changed after animation will trigger moveend\n    var promise = new _ember['default'].Test.promise(function (resolve) {\n      leafletMap.on('moveend', resolve);\n    });\n\n    _ember['default'].run(function () {\n      component.setProperties({\n        'lat': 0,\n        'lng': 0\n      });\n    });\n\n    return promise.then(function () {\n      assert.ok(leafletMap.getCenter().equals([0, 0]));\n    });\n  });\n\n  (0, _emberQunit.test)('should pass zoomSnap/zoomDelta options to leaflet map', function (assert) {\n    var component = this.subject({\n      zoomSnap: 0.5,\n      zoomDelta: 0.1\n    });\n\n    this.render();\n\n    var leafletMap = component.get('_leafletObject');\n\n    assert.equal(leafletMap.options.zoomSnap, 0.5);\n    assert.equal(leafletMap.options.zoomDelta, 0.1);\n  });\n});","define('dummy/tests/unit/components/flexberry-map-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components');\n  test('unit/components/flexberry-map-test.js should pass jscs', function () {\n    ok(true, 'unit/components/flexberry-map-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/flexberry-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/flexberry-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/flexberry-map-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/layers/group-layer-test', ['exports', 'ember-qunit', 'sinon'], function (exports, _emberQunit, _sinon) {\n\n  (0, _emberQunit.moduleForComponent)('layers/group-layer', 'Unit | Component | layers/group layer', {\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it return L.LayerGroup on createLayer', function (assert) {\n    assert.expect(1);\n\n    var component = this.subject();\n    var layer = component.createLayer();\n    assert.ok(layer instanceof L.LayerGroup, 'Expected L.LayerGroup instance');\n  });\n\n  (0, _emberQunit.test)('it not call _leafletObject.setZIndex on setZIndex', function (assert) {\n    assert.expect(1);\n\n    var component = this.subject();\n    var leafletLayerPromiseResolved = assert.async();\n    component.get('_leafletLayerPromise').then(function (leafletLayer) {\n      var layer = component.get('_leafletObject');\n      var spy = _sinon['default'].spy(layer, 'setZIndex');\n\n      component.setZIndex(0);\n\n      assert.equal(spy.callCount, 0);\n    })['finally'](function () {\n      leafletLayerPromiseResolved();\n    });\n  });\n});","define('dummy/tests/unit/components/layers/group-layer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components/layers');\n  test('unit/components/layers/group-layer-test.js should pass jscs', function () {\n    ok(true, 'unit/components/layers/group-layer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/layers/group-layer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/layers/group-layer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/layers/group-layer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/layers/tile-layer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('layers/tile-layer', 'Unit | Component | layers/tile layer', {\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it return L.TileLayer on createLayer', function (assert) {\n    var component = this.subject({\n      requiredOptions: ['']\n    });\n    var layer = component.createLayer();\n    assert.ok(layer instanceof L.TileLayer, 'Expected L.TileLayer instance');\n  });\n});","define('dummy/tests/unit/components/layers/tile-layer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components/layers');\n  test('unit/components/layers/tile-layer-test.js should pass jscs', function () {\n    ok(true, 'unit/components/layers/tile-layer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/layers/tile-layer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/layers/tile-layer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/layers/tile-layer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/layers/wms-layer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('layers/wms-layer', 'Unit | Component | layers/wms layer', {\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it return L.TileLayer.wms on createLayer', function (assert) {\n    var component = this.subject({\n      requiredOptions: ['']\n    });\n    var layer = component.createLayer();\n    assert.ok(layer instanceof L.TileLayer.WMS, 'Expected L.TileLayer.wms instance');\n  });\n});","define('dummy/tests/unit/components/layers/wms-layer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components/layers');\n  test('unit/components/layers/wms-layer-test.js should pass jscs', function () {\n    ok(true, 'unit/components/layers/wms-layer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/layers/wms-layer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/layers/wms-layer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/layers/wms-layer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/minimap-control-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('minimap-control', 'Unit | Component | minimap control', {\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it should return L.Control.MiniMap from createControl', function (assert) {\n    var component = this.subject();\n\n    // Renders the component to the page.\n    var control = component.createControl();\n\n    assert.ok(control instanceof L.Control.MiniMap);\n  });\n\n  (0, _emberQunit.test)('it should return L.LayerGroup from layerGroup', function (assert) {\n    var component = this.subject();\n\n    var lGroup = component.get('layerGroup');\n\n    assert.ok(lGroup instanceof L.LayerGroup);\n  });\n});","define('dummy/tests/unit/components/minimap-control-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components');\n  test('unit/components/minimap-control-test.js should pass jscs', function () {\n    ok(true, 'unit/components/minimap-control-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/minimap-control-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/minimap-control-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/minimap-control-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/scale-control-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('scale-control', 'Unit | Component | scale control', {\n    // Specify the other units that are required for this test\n    // needs: ['component:foo', 'helper:bar'],\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it should return L.Control.Scale from createControl', function (assert) {\n    var component = this.subject();\n\n    // Renders the component to the page.\n    var control = component.createControl();\n\n    assert.ok(control instanceof L.Control.Scale);\n  });\n});","define('dummy/tests/unit/components/scale-control-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components');\n  test('unit/components/scale-control-test.js should pass jscs', function () {\n    ok(true, 'unit/components/scale-control-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/scale-control-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/scale-control-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/scale-control-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/switch-scale-control-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('switch-scale-control', 'Unit | Component | switch scale control', {\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it should return L.Control.SwitchScaleControl from createControl', function (assert) {\n    var component = this.subject();\n\n    // Renders the component to the page.\n    var control = component.createControl();\n\n    assert.ok(control instanceof L.Control.SwitchScaleControl);\n  });\n});","define('dummy/tests/unit/components/switch-scale-control-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components');\n  test('unit/components/switch-scale-control-test.js should pass jscs', function () {\n    ok(true, 'unit/components/switch-scale-control-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/switch-scale-control-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/switch-scale-control-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/switch-scale-control-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/zoomslider-control-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('zoomslider-control', 'Unit | Component | zoomslider control', {\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it should return L.Control.Zoomslider from createControl', function (assert) {\n    var component = this.subject();\n\n    // Renders the component to the page.\n    var control = component.createControl();\n\n    assert.ok(control instanceof L.Control.Zoomslider);\n  });\n});","define('dummy/tests/unit/components/zoomslider-control-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components');\n  test('unit/components/zoomslider-control-test.js should pass jscs', function () {\n    ok(true, 'unit/components/zoomslider-control-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/zoomslider-control-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/zoomslider-control-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/zoomslider-control-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/controllers/edit-map-test', ['exports', 'ember-flexberry-gis/controllers/edit-map', 'qunit'], function (exports, _emberFlexberryGisControllersEditMap, _qunit) {\n\n  (0, _qunit.module)('Unit | Controller | edit-map');\n\n  (0, _qunit.test)('it exists', function (assert) {\n    var route = _emberFlexberryGisControllersEditMap['default'].create({});\n    assert.ok(route);\n  });\n});","define('dummy/tests/unit/controllers/edit-map-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/controllers');\n  test('unit/controllers/edit-map-test.js should pass jscs', function () {\n    ok(true, 'unit/controllers/edit-map-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/controllers/edit-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/edit-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/edit-map-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/controllers/list-map-test', ['exports', 'ember-flexberry-gis/controllers/list-map', 'qunit'], function (exports, _emberFlexberryGisControllersListMap, _qunit) {\n\n  (0, _qunit.module)('Unit | Controller | list-map');\n\n  (0, _qunit.test)('it exists', function (assert) {\n    var route = _emberFlexberryGisControllersListMap['default'].create({});\n    assert.ok(route);\n  });\n});","define('dummy/tests/unit/controllers/list-map-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/controllers');\n  test('unit/controllers/list-map-test.js should pass jscs', function () {\n    ok(true, 'unit/controllers/list-map-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/controllers/list-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/list-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/list-map-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/helpers/flexberry-search-properties-osm-ru-test', ['exports', 'dummy/helpers/flexberry-search-properties-osm-ru', 'qunit'], function (exports, _dummyHelpersFlexberrySearchPropertiesOsmRu, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | flexberry search properties osm ru');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _dummyHelpersFlexberrySearchPropertiesOsmRu.flexberrySearchPropertiesOsmRu)([42]);\n    assert.ok(result);\n  });\n});","define('dummy/tests/unit/helpers/flexberry-search-properties-osm-ru-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/helpers');\n  test('unit/helpers/flexberry-search-properties-osm-ru-test.js should pass jscs', function () {\n    ok(true, 'unit/helpers/flexberry-search-properties-osm-ru-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/helpers/flexberry-search-properties-osm-ru-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/helpers/flexberry-search-properties-osm-ru-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/flexberry-search-properties-osm-ru-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/helpers/instance-of-test', ['exports', 'dummy/helpers/instance-of', 'qunit'], function (exports, _dummyHelpersInstanceOf, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | instance of');\n\n  (0, _qunit.test)('it works', function (assert) {\n    assert.expect(2);\n    var obj = L.layerGroup();\n    var constructor = L.LayerGroup;\n    var result = (0, _dummyHelpersInstanceOf.instanceOf)([obj, constructor]);\n    assert.ok(result);\n\n    constructor = L.Control.MiniMap;\n    result = (0, _dummyHelpersInstanceOf.instanceOf)([obj, constructor]);\n    assert.notOk(result);\n  });\n});","define('dummy/tests/unit/helpers/instance-of-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/helpers');\n  test('unit/helpers/instance-of-test.js should pass jscs', function () {\n    ok(true, 'unit/helpers/instance-of-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/helpers/instance-of-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/helpers/instance-of-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/instance-of-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/initializers/flexberry-map-commands-test', ['exports', 'ember', 'dummy/initializers/map-commands', 'qunit'], function (exports, _ember, _dummyInitializersMapCommands, _qunit) {\n\n  var application = undefined;\n\n  (0, _qunit.module)('Unit | Initializer | map-commands', {\n    beforeEach: function beforeEach() {\n      _ember['default'].run(function () {\n        application = _ember['default'].Application.create();\n        application.deferReadiness();\n      });\n    }\n  });\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    _dummyInitializersMapCommands['default'].initialize(application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n});","define('dummy/tests/unit/initializers/flexberry-map-commands-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/initializers');\n  test('unit/initializers/flexberry-map-commands-test.js should pass jscs', function () {\n    ok(true, 'unit/initializers/flexberry-map-commands-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/initializers/flexberry-map-commands-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/initializers/flexberry-map-commands-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/initializers/flexberry-map-commands-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/initializers/flexberry-map-tools-test', ['exports', 'ember', 'dummy/initializers/map-tools', 'qunit'], function (exports, _ember, _dummyInitializersMapTools, _qunit) {\n\n  var application = undefined;\n\n  (0, _qunit.module)('Unit | Initializer | map-tools', {\n    beforeEach: function beforeEach() {\n      _ember['default'].run(function () {\n        application = _ember['default'].Application.create();\n        application.deferReadiness();\n      });\n    }\n  });\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    _dummyInitializersMapTools['default'].initialize(application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n});","define('dummy/tests/unit/initializers/flexberry-map-tools-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/initializers');\n  test('unit/initializers/flexberry-map-tools-test.js should pass jscs', function () {\n    ok(true, 'unit/initializers/flexberry-map-tools-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/initializers/flexberry-map-tools-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/initializers/flexberry-map-tools-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/initializers/flexberry-map-tools-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/initializers/spatial-bookmark-storage-test', ['exports', 'ember', 'dummy/initializers/spatial-bookmark-storage', 'qunit'], function (exports, _ember, _dummyInitializersSpatialBookmarkStorage, _qunit) {\n\n  var application = undefined;\n\n  (0, _qunit.module)('Unit | Initializer | spatial bookmark storage', {\n    beforeEach: function beforeEach() {\n      _ember['default'].run(function () {\n        application = _ember['default'].Application.create();\n        application.deferReadiness();\n      });\n    }\n  });\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    _dummyInitializersSpatialBookmarkStorage['default'].initialize(application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n});","define('dummy/tests/unit/initializers/spatial-bookmark-storage-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/initializers');\n  test('unit/initializers/spatial-bookmark-storage-test.js should pass jscs', function () {\n    ok(true, 'unit/initializers/spatial-bookmark-storage-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/initializers/spatial-bookmark-storage-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/initializers/spatial-bookmark-storage-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/initializers/spatial-bookmark-storage-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/mixins/dynamic-actions-test', ['exports', 'ember', 'ember-flexberry-gis/mixins/dynamic-actions', 'ember-flexberry-gis/objects/dynamic-action', 'qunit'], function (exports, _ember, _emberFlexberryGisMixinsDynamicActions, _emberFlexberryGisObjectsDynamicAction, _qunit) {\n  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\n  var ClassWithDynamicActionsMixin = _ember['default'].Object.extend(_emberFlexberryGisMixinsDynamicActions['default'], {});\n  var ComponentWithDynamicActionsMixin = _ember['default'].Component.extend(_emberFlexberryGisMixinsDynamicActions['default'], {});\n\n  (0, _qunit.module)('Unit | Mixin | dynamic-actions mixin');\n\n  (0, _qunit.test)('Mixin throws assertion failed exception if it\\'s owner hasn\\'t \\'sendAction\\' method', function (assert) {\n    assert.expect(1);\n\n    try {\n      ClassWithDynamicActionsMixin.create({ dynamicActions: [] });\n    } catch (ex) {\n      assert.strictEqual(/wrong\\s*type\\s*of\\s*.*sendAction.*/gi.test(ex.message), true, 'Throws assertion failed exception if owner hasn\\'t \\'sendAction\\' method');\n    }\n  });\n\n  (0, _qunit.test)('Mixin throws assertion failed exception if specified \\'dynamicActions\\' is not array', function (assert) {\n    var wrongDynamicActionsArray = _ember['default'].A([1, true, false, 'some string', {}, function () {}, new Date(), new RegExp()]);\n\n    assert.expect(wrongDynamicActionsArray.length);\n\n    wrongDynamicActionsArray.forEach(function (wrongDynamicActions) {\n      var component = ComponentWithDynamicActionsMixin.create({\n        attrs: {},\n        dynamicActions: wrongDynamicActions\n      });\n\n      try {\n        component.sendAction('someAction');\n      } catch (ex) {\n        assert.strictEqual(/wrong\\s*type\\s*of\\s*.*dynamicActions.*/gi.test(ex.message), true, 'Throws assertion failed exception if specified \\'dynamicActions\\' property is \\'' + _ember['default'].typeOf(wrongDynamicActions) + '\\'');\n      }\n    });\n  });\n\n  (0, _qunit.test)('Mixin throws assertion failed exception if one of specified \\'dynamicActions\\' has wrong \\'on\\' property', function (assert) {\n    var wrongOnPropertiesArray = _ember['default'].A([1, true, false, {}, [], function () {}, new Date(), new RegExp()]);\n\n    assert.expect(wrongOnPropertiesArray.length);\n\n    wrongOnPropertiesArray.forEach(function (wrongOnProperty) {\n      var component = ComponentWithDynamicActionsMixin.create({\n        attrs: {},\n        dynamicActions: _ember['default'].A([_emberFlexberryGisObjectsDynamicAction['default'].create({\n          on: wrongOnProperty,\n          actionHandler: null,\n          actionName: null,\n          actionContext: null,\n          actionArguments: null\n        })])\n      });\n\n      try {\n        component.sendAction('someAction');\n      } catch (ex) {\n        assert.strictEqual(/wrong\\s*type\\s*of\\s*.*on.*/gi.test(ex.message), true, 'Throws assertion failed exception if one of specified \\'dynamicActions\\' has \\'on\\' property of wrong type \\'' + _ember['default'].typeOf(wrongOnProperty) + '\\'');\n      }\n    });\n  });\n\n  (0, _qunit.test)('Mixin throws assertion failed exception if one of specified \\'dynamicActions\\' has wrong \\'actionHandler\\' property', function (assert) {\n    var wrongActionHandlersArray = _ember['default'].A([1, true, false, 'some string', {}, [], new Date(), new RegExp()]);\n\n    assert.expect(wrongActionHandlersArray.length);\n\n    wrongActionHandlersArray.forEach(function (wrongActionHandler) {\n      var component = ComponentWithDynamicActionsMixin.create({\n        attrs: {},\n        dynamicActions: _ember['default'].A([_emberFlexberryGisObjectsDynamicAction['default'].create({\n          on: 'someAction',\n          actionHandler: wrongActionHandler,\n          actionName: null,\n          actionContext: null,\n          actionArguments: null\n        })])\n      });\n\n      try {\n        component.sendAction('someAction');\n      } catch (ex) {\n        assert.strictEqual(/wrong\\s*type\\s*of\\s*.*actionHandler.*/gi.test(ex.message), true, 'Throws assertion failed exception if one of specified \\'dynamicActions\\' has \\'actionHandler\\' property of wrong type \\'' + _ember['default'].typeOf(wrongActionHandler) + '\\'');\n      }\n    });\n  });\n\n  (0, _qunit.test)('Mixin throws assertion failed exception if one of specified \\'dynamicActions\\' has wrong \\'actionName\\' property', function (assert) {\n    var wrongActionNamesArray = _ember['default'].A([1, true, false, {}, [], function () {}, new Date(), new RegExp()]);\n\n    assert.expect(wrongActionNamesArray.length);\n\n    wrongActionNamesArray.forEach(function (wrongActionName) {\n      var component = ComponentWithDynamicActionsMixin.create({\n        attrs: {},\n        dynamicActions: _ember['default'].A([_emberFlexberryGisObjectsDynamicAction['default'].create({\n          on: 'someAction',\n          actionHandler: null,\n          actionName: wrongActionName,\n          actionContext: null,\n          actionArguments: null\n        })])\n      });\n\n      try {\n        component.sendAction('someAction');\n      } catch (ex) {\n        assert.strictEqual(/wrong\\s*type\\s*of\\s*.*actionName.*/gi.test(ex.message), true, 'Throws assertion failed exception if one of specified \\'dynamicActions\\' has \\'actionName\\' property of wrong type \\'' + _ember['default'].typeOf(wrongActionName) + '\\'');\n      }\n    });\n  });\n\n  (0, _qunit.test)('Mixin throws assertion failed exception if one of specified \\'dynamicActions\\' has defined \\'actionName\\', but' + ' wrong \\'actionContext\\' property (without \\'send\\' method)', function (assert) {\n    var wrongActionContextsArray = _ember['default'].A([null, 1, true, false, {}, [], function () {}, new Date(), new RegExp(), { send: function send() {} }]);\n\n    // Assertion shouldn't be send for last object containing 'send' method,\n    // that's why length - 1.\n    assert.expect(wrongActionContextsArray.length - 1);\n\n    wrongActionContextsArray.forEach(function (wrongActionContext) {\n      var component = ComponentWithDynamicActionsMixin.create({\n        attrs: {},\n        dynamicActions: _ember['default'].A([_emberFlexberryGisObjectsDynamicAction['default'].create({\n          on: 'someAction',\n          actionHandler: null,\n          actionName: 'onSomeAction',\n          actionContext: wrongActionContext,\n          actionArguments: null\n        })])\n      });\n\n      try {\n        component.sendAction('someAction');\n      } catch (ex) {\n        assert.strictEqual(/method\\s*.*send.*\\s*.*actionContext.*/gi.test(ex.message), true, 'Throws assertion failed exception if one of specified \\'dynamicActions\\' has defined \\'actionName\\', ' + 'but wrong \\'actionContext\\' property (without \\'send\\' method)');\n      }\n    });\n  });\n\n  (0, _qunit.test)('Mixin throws assertion failed exception if one of specified \\'dynamicActions\\' has wrong \\'actionArguments\\' property', function (assert) {\n    var wrongActionArgumentsArray = _ember['default'].A([1, true, false, 'some string', {}, function () {}, new Date(), new RegExp()]);\n\n    assert.expect(wrongActionArgumentsArray.length);\n\n    wrongActionArgumentsArray.forEach(function (wrongActionArguments) {\n      var component = ComponentWithDynamicActionsMixin.create({\n        attrs: {},\n        dynamicActions: _ember['default'].A([_emberFlexberryGisObjectsDynamicAction['default'].create({\n          on: 'someAction',\n          actionHandler: null,\n          actionName: null,\n          actionContext: null,\n          actionArguments: wrongActionArguments\n        })])\n      });\n\n      try {\n        component.sendAction('someAction');\n      } catch (ex) {\n        assert.strictEqual(/wrong\\s*type\\s*of\\s*.*actionArguments.*/gi.test(ex.message), true, 'Throws assertion failed exception if one of specified \\'dynamicActions\\' has \\'actionArguments\\' property of wrong type \\'' + _ember['default'].typeOf(wrongActionArguments) + '\\'');\n      }\n    });\n  });\n\n  (0, _qunit.test)('Mixin does\\'t break it\\'s owner\\'s standard \\'sendAction\\' logic', function (assert) {\n    assert.expect(1);\n\n    var component = ComponentWithDynamicActionsMixin.create({\n      attrs: {},\n      dynamicActions: _ember['default'].A([_emberFlexberryGisObjectsDynamicAction['default'].create({\n        on: 'someAction',\n        actionHandler: null,\n        actionName: null,\n        actionContext: null,\n        actionArguments: null\n      })])\n    });\n\n    var someActionHandlerHasBeenCalled = false;\n    component.attrs.someAction = function () {\n      someActionHandlerHasBeenCalled = true;\n    };\n\n    component.sendAction('someAction');\n\n    assert.strictEqual(someActionHandlerHasBeenCalled, true, 'Component still normally triggers proper action handlers (binded explicitly with ember API, not with dynamic actions)');\n  });\n\n  (0, _qunit.test)('Mixin triggers specified \\'dynamicActions\\' handlers (\\'actionHandler\\' callbacks only) ' + 'if \\'actionContext\\' isn\\'t specified', function (assert) {\n    assert.expect(10);\n\n    var someActionDynamicHandlerHasBeenCalled = false;\n    var someAnotherActionDynamicHandlerHasBeenCalled = false;\n    var someActionAgainDynamicHandlerHasBeenCalled = false;\n\n    var component = ComponentWithDynamicActionsMixin.create({\n      attrs: {},\n      dynamicActions: _ember['default'].A([_emberFlexberryGisObjectsDynamicAction['default'].create({\n        on: 'someAction',\n        actionHandler: function actionHandler() {\n          someActionDynamicHandlerHasBeenCalled = true;\n        },\n        actionName: null,\n        actionContext: null,\n        actionArguments: null\n      }), _emberFlexberryGisObjectsDynamicAction['default'].create({\n        on: 'someAnotherAction',\n        actionHandler: function actionHandler() {\n          someAnotherActionDynamicHandlerHasBeenCalled = true;\n        },\n        actionName: null,\n        actionContext: null,\n        actionArguments: null\n      }), _emberFlexberryGisObjectsDynamicAction['default'].create({\n        on: 'someAction',\n        actionHandler: function actionHandler() {\n          someActionAgainDynamicHandlerHasBeenCalled = true;\n        },\n        actionName: null,\n        actionContext: null,\n        actionArguments: null\n      })])\n    });\n\n    var someActionHandlerHasBeenCalled = false;\n    component.attrs.someAction = function () {\n      someActionHandlerHasBeenCalled = true;\n    };\n\n    var someAnotherActionHandlerHasBeenCalled = false;\n    component.attrs.someAnotherAction = function () {\n      someAnotherActionHandlerHasBeenCalled = true;\n    };\n\n    component.sendAction('someAction');\n    assert.strictEqual(someActionHandlerHasBeenCalled, true, 'Component still normally triggers proper action handlers (binded explicitly with ember API, not with dynamic actions)');\n    assert.strictEqual(someAnotherActionHandlerHasBeenCalled, false, 'Component still normally doesn\\'t trigger proper action handlers ' + '(binded explicitly with ember API, not with dynamic actions) for yet unsended actions');\n\n    assert.strictEqual(someActionDynamicHandlerHasBeenCalled, true, 'Component triggers specified in dynamic action \\'actionHandler\\' for component\\'s \\'someAction\\'');\n    assert.strictEqual(someAnotherActionDynamicHandlerHasBeenCalled, false, 'Component doesn\\'t trigger specified in dynamic action \\'actionHandler\\' binded to yet unsended \\'someAnotherAction\\'');\n    assert.strictEqual(someActionAgainDynamicHandlerHasBeenCalled, true, 'Component triggers specified in dynamic action another \\'actionHandler\\' for component\\'s \\'someAction\\'');\n\n    someActionHandlerHasBeenCalled = false;\n    someAnotherActionHandlerHasBeenCalled = false;\n    someAnotherActionDynamicHandlerHasBeenCalled = false;\n    someActionDynamicHandlerHasBeenCalled = false;\n    someActionAgainDynamicHandlerHasBeenCalled = false;\n\n    component.sendAction('someAnotherAction');\n    assert.strictEqual(someActionHandlerHasBeenCalled, false, 'Component still normally doesn\\'t trigger proper action handlers ' + '(binded explicitly with ember API, not with dynamic actions) for yet unsended actions');\n    assert.strictEqual(someAnotherActionHandlerHasBeenCalled, true, 'Component still normally triggers proper action handlers (binded explicitly with ember API, not with dynamic actions)');\n\n    assert.strictEqual(someActionDynamicHandlerHasBeenCalled, false, 'Component doesn\\'t trigger specified in dynamic action \\'actionHandler\\' binded to yet unsended \\'someAction\\'');\n    assert.strictEqual(someAnotherActionDynamicHandlerHasBeenCalled, true, 'Component triggers specified in dynamic action \\'actionHandler\\' for component\\'s \\'anotherAction\\'');\n    assert.strictEqual(someActionAgainDynamicHandlerHasBeenCalled, false, 'Component doesn\\'t trigger specified in dynamic action \\'actionHandler\\' binded to yet unsended \\'someAction\\'');\n  });\n\n  (0, _qunit.test)('Mixin triggers all specified \\'dynamicActions\\' handlers (callbacks & normal actions) on given context', function (assert) {\n    assert.expect(22);\n\n    var someActionControllersHandlerHasBeenCalled = false;\n    var someActionControllersHandlerContext = null;\n\n    var someAnoterActionControllersHandlerHasBeenCalled = false;\n    var someAnotherActionControllersHandlerContext = null;\n\n    var someActionAgainControllersHandlerHasBeenCalled = false;\n    var someActionAgainControllersHandlerContext = null;\n\n    var controller = _ember['default'].Controller.extend({\n      actions: {\n        onSomeAction: function onSomeAction() {\n          someActionControllersHandlerHasBeenCalled = true;\n          someActionControllersHandlerContext = this;\n        },\n\n        onSomeAnotherAction: function onSomeAnotherAction() {\n          someAnoterActionControllersHandlerHasBeenCalled = true;\n          someAnotherActionControllersHandlerContext = this;\n        },\n\n        onSomeActionAgain: function onSomeActionAgain() {\n          someActionAgainControllersHandlerHasBeenCalled = true;\n          someActionAgainControllersHandlerContext = this;\n        }\n      }\n    }).create();\n\n    var someActionDynamicHandlerHasBeenCalled = false;\n    var someActionDynamicHandlerContext = null;\n\n    var someAnotherActionDynamicHandlerHasBeenCalled = false;\n    var someAnotherActionDynamicHandlerContext = null;\n\n    var someActionAgainDynamicHandlerHasBeenCalled = false;\n    var someActionAgainDynamicHandlerContext = null;\n\n    var component = ComponentWithDynamicActionsMixin.create({\n      attrs: {},\n      dynamicActions: _ember['default'].A([_emberFlexberryGisObjectsDynamicAction['default'].create({\n        on: 'someAction',\n        actionHandler: function actionHandler() {\n          someActionDynamicHandlerHasBeenCalled = true;\n          someActionDynamicHandlerContext = this;\n        },\n        actionName: 'onSomeAction',\n        actionContext: controller,\n        actionArguments: null\n      }), _emberFlexberryGisObjectsDynamicAction['default'].create({\n        on: 'someAnotherAction',\n        actionHandler: function actionHandler() {\n          someAnotherActionDynamicHandlerHasBeenCalled = true;\n          someAnotherActionDynamicHandlerContext = this;\n        },\n        actionName: 'onSomeAnotherAction',\n        actionContext: controller,\n        actionArguments: null\n      }), _emberFlexberryGisObjectsDynamicAction['default'].create({\n        on: 'someAction',\n        actionHandler: function actionHandler() {\n          someActionAgainDynamicHandlerHasBeenCalled = true;\n          someActionAgainDynamicHandlerContext = this;\n        },\n        actionName: 'onSomeActionAgain',\n        actionContext: controller,\n        actionArguments: null\n      })])\n    });\n\n    var someActionHandlerHasBeenCalled = false;\n    component.attrs.someAction = function () {\n      someActionHandlerHasBeenCalled = true;\n    };\n\n    var someAnotherActionHandlerHasBeenCalled = false;\n    component.attrs.someAnotherAction = function () {\n      someAnotherActionHandlerHasBeenCalled = true;\n    };\n\n    component.sendAction('someAction');\n    assert.strictEqual(someActionHandlerHasBeenCalled, true, 'Component still normally triggers proper action handlers (binded explicitly with ember API, not with dynamic actions)');\n    assert.strictEqual(someAnotherActionHandlerHasBeenCalled, false, 'Component still normally doesn\\'t trigger proper action handlers ' + '(binded explicitly with ember API, not with dynamic actions) for yet unsended actions');\n\n    assert.strictEqual(someActionDynamicHandlerHasBeenCalled, true, 'Component triggers specified in dynamic action \\'actionHandler\\' for component\\'s \\'someAction\\'');\n    assert.strictEqual(someActionDynamicHandlerContext, controller, 'Component triggers specified in dynamic action \\'actionHandler\\' for ' + 'component\\'s \\'someAction\\' with specified \\'actionContext\\'');\n    assert.strictEqual(someAnotherActionDynamicHandlerHasBeenCalled, false, 'Component doesn\\'t trigger specified in dynamic action \\'actionHandler\\' binded to ' + 'yet unsended \\'someAnotherAction\\'');\n    assert.strictEqual(someActionAgainDynamicHandlerHasBeenCalled, true, 'Component triggers specified in dynamic action another \\'actionHandler\\' for component\\'s \\'someAction\\'');\n    assert.strictEqual(someActionAgainDynamicHandlerContext, controller, 'Component triggers specified in dynamic action \\'actionHandler\\' for ' + 'component\\'s \\'someAction\\' with specified \\'actionContext\\'');\n\n    assert.strictEqual(someActionControllersHandlerHasBeenCalled, true, 'Component triggers on given \\'actionContext\\' action with specified \\'actionName\\' for component\\'s \\'someAction\\'');\n    assert.strictEqual(someActionControllersHandlerContext, controller, 'Component triggers on given \\'actionContext\\' action with specified \\'actionName\\' for ' + 'component\\'s \\'someAction\\' with specified \\'actionContext\\'');\n    assert.strictEqual(someAnotherActionDynamicHandlerHasBeenCalled, false, 'Component doesn\\'t trigger specified in dynamic action \\'actionHandler\\' binded to yet unsended \\'someAnotherAction\\'');\n    assert.strictEqual(someActionAgainControllersHandlerHasBeenCalled, true, 'Component triggers on given \\'actionContext\\' action with specified \\'actionName\\' for component\\'s \\'someAction\\'');\n    assert.strictEqual(someActionAgainControllersHandlerContext, controller, 'Component triggers on given \\'actionContext\\' action with specified \\'actionName\\' for ' + 'component\\'s \\'someAction\\' with specified \\'actionContext\\'');\n\n    someActionHandlerHasBeenCalled = false;\n    someAnotherActionHandlerHasBeenCalled = false;\n\n    someActionDynamicHandlerHasBeenCalled = false;\n    someActionDynamicHandlerContext = null;\n\n    someAnotherActionDynamicHandlerHasBeenCalled = false;\n    someAnotherActionDynamicHandlerContext = null;\n\n    someActionAgainDynamicHandlerHasBeenCalled = false;\n    someActionAgainDynamicHandlerContext = null;\n\n    someActionControllersHandlerHasBeenCalled = false;\n    someActionControllersHandlerContext = null;\n\n    someAnoterActionControllersHandlerHasBeenCalled = false;\n    someAnotherActionControllersHandlerContext = null;\n\n    someActionAgainControllersHandlerHasBeenCalled = false;\n    someActionAgainControllersHandlerContext = null;\n\n    component.sendAction('someAnotherAction');\n    assert.strictEqual(someActionHandlerHasBeenCalled, false, 'Component still normally doesn\\'t trigger proper action handlers ' + '(binded explicitly with ember API, not with dynamic actions) for yet unsended actions');\n    assert.strictEqual(someAnotherActionHandlerHasBeenCalled, true, 'Component still normally triggers proper action handlers ' + '(binded explicitly with ember API, not with dynamic actions)');\n\n    assert.strictEqual(someActionDynamicHandlerHasBeenCalled, false, 'Component doesn\\'t trigger specified in dynamic action \\'actionHandler\\' binded to yet unsended \\'someAction\\'');\n    assert.strictEqual(someAnotherActionDynamicHandlerHasBeenCalled, true, 'Component doesn\\'t trigger specified in dynamic action \\'actionHandler\\' binded to yet unsended \\'someAnotherAction\\'');\n    assert.strictEqual(someAnotherActionDynamicHandlerContext, controller, 'Component triggers specified in dynamic action \\'actionHandler\\' for ' + 'component\\'s \\'someAnotherAction\\' with specified \\'actionContext\\'');\n    assert.strictEqual(someActionAgainDynamicHandlerHasBeenCalled, false, 'Component doesn\\'t trigger specified in dynamic action \\'actionHandler\\' binded ' + 'to yet unsended \\'someAction\\'');\n\n    assert.strictEqual(someActionControllersHandlerHasBeenCalled, false, 'Component doesn\\'t trigger on given \\'actionContext\\' action with specified \\'actionName\\' binded ' + 'to yet unsended \\'someAction\\'');\n    assert.strictEqual(someAnoterActionControllersHandlerHasBeenCalled, true, 'Component triggers on given \\'actionContext\\' action with specified \\'actionName\\' for ' + 'component\\'s \\'someAnotherAction\\'');\n    assert.strictEqual(someAnotherActionControllersHandlerContext, controller, 'Component triggers on given \\'actionContext\\' action with specified \\'actionName\\' for ' + 'component\\'s \\'someAnotherAction\\' with specified \\'actionContext\\'');\n    assert.strictEqual(someActionAgainControllersHandlerHasBeenCalled, false, 'Component doesn\\'t trigger on given \\'actionContext\\' action with specified \\'actionName\\' binded to ' + 'yet unsended \\'someAction\\'');\n  });\n\n  (0, _qunit.test)('Mixin works properly with \\'dynamicActions\\' added/removed after component initialization', function (assert) {\n    assert.expect(8);\n\n    // Define component without any dynamic actions.\n    var dynamicActions = _ember['default'].A();\n    var component = ComponentWithDynamicActionsMixin.create({\n      attrs: {},\n      dynamicActions: dynamicActions\n    });\n\n    // Define controller.\n    var someActionControllersHandlerHasBeenCalled = false;\n    var someActionControllersHandlerContext = null;\n    var controller = _ember['default'].Controller.extend({\n      actions: {\n        onSomeAction: function onSomeAction() {\n          someActionControllersHandlerHasBeenCalled = true;\n          someActionControllersHandlerContext = this;\n        }\n      }\n    }).create();\n\n    // Define dynamic action.\n    var someActionDynamicHandlerHasBeenCalled = false;\n    var someActionDynamicHandlerContext = null;\n    var someDynamicAction = _emberFlexberryGisObjectsDynamicAction['default'].create({\n      on: 'someAction',\n      actionHandler: function actionHandler() {\n        someActionDynamicHandlerHasBeenCalled = true;\n        someActionDynamicHandlerContext = this;\n      },\n      actionName: 'onSomeAction',\n      actionContext: controller,\n      actionArguments: null\n    });\n\n    var someActionHandlerHasBeenCalled = false;\n    component.attrs.someAction = function () {\n      someActionHandlerHasBeenCalled = true;\n    };\n\n    // Add defined dynamic action to a component after it has been already initialized.\n    dynamicActions.pushObject(someDynamicAction);\n\n    // Check that all handlers were called with expected context.\n    component.sendAction('someAction');\n    assert.strictEqual(someActionHandlerHasBeenCalled, true, 'Component still normally triggers proper action handlers (binded explicitly with ember API, not with dynamic actions)');\n    assert.strictEqual(someActionDynamicHandlerHasBeenCalled, true, 'Component triggers specified in added dynamic action \\'actionHandler\\' for component\\'s \\'someAction\\'');\n    assert.strictEqual(someActionDynamicHandlerContext, controller, 'Component triggers specified in added dynamic action \\'actionHandler\\' for ' + 'component\\'s \\'someAction\\' with specified \\'actionContext\\'');\n    assert.strictEqual(someActionControllersHandlerHasBeenCalled, true, 'Component triggers on added dynamic action\\'s \\'actionContext\\' action with specified \\'actionName\\' for ' + 'component\\'s \\'someAction\\'');\n    assert.strictEqual(someActionControllersHandlerContext, controller, 'Component triggers on added dynamic action\\'s \\'actionContext\\' action with specified \\'actionName\\' for ' + 'component\\'s \\'someAction\\' with specified \\'actionContext\\'');\n\n    someActionHandlerHasBeenCalled = false;\n    someActionDynamicHandlerHasBeenCalled = false;\n    someActionDynamicHandlerContext = false;\n    someActionControllersHandlerHasBeenCalled = false;\n    someActionControllersHandlerContext = false;\n\n    // Remove defined dynamic action to a component after it has been already initialized.\n    dynamicActions.removeObject(someDynamicAction);\n    component.sendAction('someAction');\n    assert.strictEqual(someActionHandlerHasBeenCalled, true, 'Component still normally triggers proper action handlers (binded explicitly with ember API, not with dynamic actions)');\n    assert.strictEqual(someActionDynamicHandlerHasBeenCalled, false, 'Component doesn\\'t trigger specified in removed dynamic action \\'actionHandler\\' for component\\'s \\'someAction\\'');\n    assert.strictEqual(someActionControllersHandlerHasBeenCalled, false, 'Component doesn\\'t trigger on removed dynamic action\\'s \\'actionContext\\' action with specified \\'actionName\\' for ' + 'component\\'s \\'someAction\\'');\n  });\n\n  (0, _qunit.test)('Mixin adds specified in \\'dynamicActions\\' \\'actionArguments\\' to the beginning of handler\\'s arguments array', function (assert) {\n    assert.expect(3);\n\n    var dynamicActionArguments = _ember['default'].A(['firstDynamicArgument', 'secondDynamicArgument']);\n\n    var someActionHandlerArguments = null;\n    var someActionDynamicHandlerArguments = null;\n    var someActionDynamicControllersHandlerArguments = null;\n\n    var controller = _ember['default'].Controller.extend({\n      actions: {\n        onSomeAction: function onSomeAction() {\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          someActionDynamicControllersHandlerArguments = _ember['default'].A(args);\n        }\n      }\n    }).create();\n\n    var component = ComponentWithDynamicActionsMixin.create({\n      attrs: {},\n      dynamicActions: _ember['default'].A([_emberFlexberryGisObjectsDynamicAction['default'].create({\n        on: 'someAction',\n        actionHandler: function actionHandler() {\n          for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          someActionDynamicHandlerArguments = _ember['default'].A(args);\n        },\n        actionName: 'onSomeAction',\n        actionContext: controller,\n        actionArguments: dynamicActionArguments\n      })])\n    });\n\n    component.attrs.someAction = function () {\n      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      someActionHandlerArguments = _ember['default'].A(args);\n    };\n\n    // Check that all handlers were called with expected arguments.\n    var originalActionArguments = _ember['default'].A(['firstOriginalArgument', 'secondOriginalArgument']);\n    component.sendAction.apply(component, ['someAction'].concat(_toConsumableArray(originalActionArguments)));\n    assert.strictEqual(someActionHandlerArguments[0] === originalActionArguments[0] && someActionHandlerArguments[1] === originalActionArguments[1], true, 'Component\\'s original action handler doesn\\'t contain additional \\'actionArguments\\' from \\'dynamicActions\\' (only original arguments)');\n    assert.strictEqual(someActionDynamicHandlerArguments[0] === dynamicActionArguments[0] && someActionDynamicHandlerArguments[1] === dynamicActionArguments[1] && someActionDynamicHandlerArguments[2] === originalActionArguments[0] && someActionDynamicHandlerArguments[3] === originalActionArguments[1], true, 'Component\\'s dynamic action handler contains additional \\'actionArguments\\' from \\'dynamicActions\\'');\n    assert.strictEqual(someActionDynamicControllersHandlerArguments[0] === dynamicActionArguments[0] && someActionDynamicControllersHandlerArguments[1] === dynamicActionArguments[1] && someActionDynamicControllersHandlerArguments[2] === originalActionArguments[0] && someActionDynamicControllersHandlerArguments[3] === originalActionArguments[1], true, 'Action handler with specified \\'actionName\\' contains additional \\'actionArguments\\' from \\'dynamicActions\\'');\n  });\n\n  (0, _qunit.test)('Mixin doesn\\'t trigger component\\'s inner method if outer action handler is not defined', function (assert) {\n    assert.expect(2);\n\n    var component = ComponentWithDynamicActionsMixin.create({\n      attrs: {}\n    });\n\n    var innerSomeActionHasBeenCalled = false;\n    component.someAction = function () {\n      innerSomeActionHasBeenCalled = true;\n    };\n\n    component.sendAction('someAction');\n    assert.strictEqual(innerSomeActionHasBeenCalled, false, 'Component doesn\\'t trigger inner \\'someAction\\' method');\n\n    var outerSomeActionHasBeenCalled = false;\n    component.attrs.someAction = function () {\n      outerSomeActionHasBeenCalled = true;\n    };\n\n    component.sendAction('someAction');\n    assert.strictEqual(outerSomeActionHasBeenCalled && !innerSomeActionHasBeenCalled, true, 'Component trigger\\'s outer \\'someAction\\' handler');\n  });\n});","define('dummy/tests/unit/mixins/dynamic-actions-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/mixins');\n  test('unit/mixins/dynamic-actions-test.js should pass jscs', function () {\n    ok(true, 'unit/mixins/dynamic-actions-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/mixins/dynamic-actions-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins/dynamic-actions-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/dynamic-actions-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/mixins/dynamic-properties-test', ['exports', 'ember', 'ember-flexberry-gis/mixins/dynamic-properties', 'qunit'], function (exports, _ember, _emberFlexberryGisMixinsDynamicProperties, _qunit) {\n\n  var ClassWithDynamicPropertiesMixin = _ember['default'].Object.extend(_emberFlexberryGisMixinsDynamicProperties['default'], {});\n\n  (0, _qunit.module)('Unit | Mixin | dynamic-properties mixin');\n\n  (0, _qunit.test)('Mixin throws assertion failed exception if specified \\'dynamicProperties\\' property is not an \\'object\\' or an \\'instance\\'', function (assert) {\n    var wrongDynamicPropertiesArray = _ember['default'].A([1, true, false, 'some string', [], function () {}, new Date(), new RegExp()]);\n\n    assert.expect(wrongDynamicPropertiesArray.length);\n\n    wrongDynamicPropertiesArray.forEach(function (wrongDynamicProperties) {\n      try {\n        ClassWithDynamicPropertiesMixin.create({ dynamicProperties: wrongDynamicProperties });\n      } catch (ex) {\n        assert.strictEqual(/wrong\\s*type\\s*of\\s*.*dynamicProperties.*/gi.test(ex.message), true, 'Throws assertion failed exception if specified \\'dynamicProperties\\' property is \\'' + _ember['default'].typeOf(wrongDynamicProperties) + '\\'');\n      }\n    });\n  });\n\n  (0, _qunit.test)('Mixin assignes it\\'s owner\\'s properties form the specified \\'dynamicProperties\\'', function (assert) {\n    assert.expect(1);\n\n    var propertyValue = 'MyValue';\n    var dynamicProperties = { property: propertyValue };\n    var mixinOwner = ClassWithDynamicPropertiesMixin.create({ dynamicProperties: dynamicProperties });\n\n    assert.strictEqual(mixinOwner.get('property'), propertyValue, 'Owner\\'s properties are equals to related \\'dynamicProperties\\'');\n  });\n\n  (0, _qunit.test)('Mixin changes it\\'s owner\\'s properties (when something changes inside related \\'dynamicProperties\\')', function (assert) {\n    assert.expect(2);\n\n    var propertyValue = 'MyValue';\n    var dynamicProperties = { property: propertyValue };\n    var mixinOwner = ClassWithDynamicPropertiesMixin.create({ dynamicProperties: dynamicProperties });\n\n    assert.strictEqual(mixinOwner.get('property'), propertyValue, 'Owner\\'s properties are equals to related \\'dynamicProperties\\'');\n\n    var propertyChangedValue = 'MyChangedValue';\n    _ember['default'].set(dynamicProperties, 'property', propertyChangedValue);\n\n    assert.strictEqual(mixinOwner.get('property'), propertyChangedValue, 'Owner\\'s properties changes when values inside \\'dynamicProperties\\' changes');\n  });\n\n  (0, _qunit.test)('Mixin removes old & adds new owner\\'s properties (when reference to whole \\'dynamicProperties\\' object changes)', function (assert) {\n    assert.expect(22);\n\n    var propertyValue = 'MyProperty';\n    var anotherPropertyValue = 'MyAnotherProperty';\n    var dynamicProperties = { property: propertyValue, anotherProperty: anotherPropertyValue };\n\n    var usualPropertyValue = 'MyUsualProperty';\n\n    var mixinOwner = ClassWithDynamicPropertiesMixin.create({\n      usualProperty: usualPropertyValue,\n      dynamicProperties: dynamicProperties\n    });\n\n    assert.strictEqual(mixinOwner.get('usualProperty'), usualPropertyValue, 'Owner\\'s \\'usualProperty\\' is equals to it\\'s initially defined value');\n    assert.strictEqual(mixinOwner.get('property'), propertyValue, 'Owner\\'s \\'property\\' is equals to related dynamicProperty');\n    assert.strictEqual(mixinOwner.get('anotherProperty'), anotherPropertyValue, 'Owner\\'s \\'anotherProperty\\' is equals to related dynamicProperty');\n\n    var ownerPropertiesNames = _ember['default'].A(Object.keys(mixinOwner));\n    assert.strictEqual(ownerPropertiesNames.contains('usualProperty'), true, 'Owner\\'s properties keys contains \\'usualProperty\\'');\n    assert.strictEqual(ownerPropertiesNames.contains('property'), true, 'Owner\\'s properties keys contains \\'property\\'');\n    assert.strictEqual(ownerPropertiesNames.contains('anotherProperty'), true, 'Owner\\'s properties keys contains \\'anotherProperty\\'');\n\n    var newPropertyValue = 'MyNewProperty';\n    var newAnotherPropertyValue = 'MyNewAnotherProperty';\n    var newDynamicProperties = { newProperty: newPropertyValue, newAnotherProperty: newAnotherPropertyValue };\n    mixinOwner.set('dynamicProperties', newDynamicProperties);\n\n    assert.strictEqual(mixinOwner.get('usualProperty'), usualPropertyValue, 'Owner\\'s \\'usualProperty\\' is equals to it\\'s initially defined value (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(_ember['default'].typeOf(mixinOwner.get('property')), 'undefined', 'Owner\\'s \\'property\\' is undefined (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(_ember['default'].typeOf(mixinOwner.get('anotherProperty')), 'undefined', 'Owner\\'s \\'anotherProperty\\' is undefined (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(mixinOwner.get('newProperty'), newPropertyValue, 'Owner\\'s \\'newProperty\\' is equals to related dynamicProperty (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(mixinOwner.get('newAnotherProperty'), newAnotherPropertyValue, 'Owner\\'s \\'newAnotherProperty\\' is equals to related dynamicProperty (after change of whole \\'dynamicProperties\\' object)');\n\n    ownerPropertiesNames = _ember['default'].A(Object.keys(mixinOwner));\n    assert.strictEqual(ownerPropertiesNames.contains('usualProperty'), true, 'Owner\\'s properties keys contains \\'usualProperty\\' (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(ownerPropertiesNames.contains('property'), false, 'Owner\\'s properties keys doesn\\'t contains \\'property\\' (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(ownerPropertiesNames.contains('anotherProperty'), false, 'Owner\\'s properties keys doesn\\'t contains \\'anotherProperty\\' (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(ownerPropertiesNames.contains('newProperty'), true, 'Owner\\'s properties keys contains \\'newProperty\\' (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(ownerPropertiesNames.contains('newAnotherProperty'), true, 'Owner\\'s properties keys contains \\'newAnotherProperty\\' (after change of whole \\'dynamicProperties\\' object)');\n\n    mixinOwner.set('dynamicProperties', null);\n    assert.strictEqual(mixinOwner.get('usualProperty'), usualPropertyValue, 'Owner\\'s \\'usualProperty\\' is equals to it\\'s initially defined value (after change of whole \\'dynamicProperties\\' object to null)');\n    assert.strictEqual(_ember['default'].typeOf(mixinOwner.get('newProperty')), 'undefined', 'Owner\\'s \\'newProperty\\' is undefined (after change of whole \\'dynamicProperties\\' object to null)');\n    assert.strictEqual(_ember['default'].typeOf(mixinOwner.get('newAnotherProperty')), 'undefined', 'Owner\\'s \\'newAnotherProperty\\' is undefined (after change of whole \\'dynamicProperties\\' object to null)');\n\n    ownerPropertiesNames = _ember['default'].A(Object.keys(mixinOwner));\n    assert.strictEqual(ownerPropertiesNames.contains('usualProperty'), true, 'Owner\\'s properties keys contains \\'usualProperty\\' (after change of whole \\'dynamicProperties\\' object to null)');\n    assert.strictEqual(ownerPropertiesNames.contains('newProperty'), false, 'Owner\\'s properties keys doesn\\'t contains \\'newProperty\\' (after change of whole \\'dynamicProperties\\' object to null)');\n    assert.strictEqual(ownerPropertiesNames.contains('newAnotherProperty'), false, 'Owner\\'s properties keys doesn\\'t contains \\'newAnotherProperty\\' (after change of whole \\'dynamicProperties\\' object to null)');\n  });\n\n  (0, _qunit.test)('Mixin removes assigned \\'dynamicProperties\\' before owner will be destroyed', function (assert) {\n    assert.expect(12);\n\n    var propertyValue = 'MyProperty';\n    var anotherPropertyValue = 'MyAnotherProperty';\n    var dynamicProperties = { property: propertyValue, anotherProperty: anotherPropertyValue };\n\n    var usualPropertyValue = 'MyUsualProperty';\n\n    var mixinOwner = ClassWithDynamicPropertiesMixin.create({\n      usualProperty: usualPropertyValue,\n      dynamicProperties: dynamicProperties\n    });\n\n    assert.strictEqual(mixinOwner.get('usualProperty'), usualPropertyValue, 'Owner\\'s \\'usualProperty\\' is equals to it\\'s initially defined value');\n    assert.strictEqual(mixinOwner.get('property'), propertyValue, 'Owner\\'s \\'property\\' is equals to related dynamicProperty');\n    assert.strictEqual(mixinOwner.get('anotherProperty'), anotherPropertyValue, 'Owner\\'s \\'anotherProperty\\' is equals to related dynamicProperty');\n\n    var ownerPropertiesNames = _ember['default'].A(Object.keys(mixinOwner));\n    assert.strictEqual(ownerPropertiesNames.contains('usualProperty'), true, 'Owner\\'s properties keys contains \\'usualProperty\\'');\n    assert.strictEqual(ownerPropertiesNames.contains('property'), true, 'Owner\\'s properties keys contains \\'property\\'');\n    assert.strictEqual(ownerPropertiesNames.contains('anotherProperty'), true, 'Owner\\'s properties keys contains \\'anotherProperty\\'');\n\n    mixinOwner.willDestroy();\n\n    assert.strictEqual(mixinOwner.get('usualProperty'), usualPropertyValue, 'Owner\\'s \\'usualProperty\\' is equals to it\\'s initially defined value (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(_ember['default'].typeOf(mixinOwner.get('property')), 'undefined', 'Owner\\'s \\'property\\' is undefined (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(_ember['default'].typeOf(mixinOwner.get('anotherProperty')), 'undefined', 'Owner\\'s \\'anotherProperty\\' is undefined (after change of whole \\'dynamicProperties\\' object)');\n\n    ownerPropertiesNames = _ember['default'].A(Object.keys(mixinOwner));\n    assert.strictEqual(ownerPropertiesNames.contains('usualProperty'), true, 'Owner\\'s properties keys contains \\'usualProperty\\'');\n    assert.strictEqual(ownerPropertiesNames.contains('property'), false, 'Owner\\'s properties keys doesn\\'t contains \\'property\\'');\n    assert.strictEqual(ownerPropertiesNames.contains('anotherProperty'), false, 'Owner\\'s properties keys doesn\\'t contains \\'anotherProperty\\'');\n  });\n});","define('dummy/tests/unit/mixins/dynamic-properties-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/mixins');\n  test('unit/mixins/dynamic-properties-test.js should pass jscs', function () {\n    ok(true, 'unit/mixins/dynamic-properties-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/mixins/dynamic-properties-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins/dynamic-properties-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/dynamic-properties-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/mixins/leaflet-events-test', ['exports', 'ember', 'ember-flexberry-gis/mixins/leaflet-events', 'qunit', 'sinon'], function (exports, _ember, _emberFlexberryGisMixinsLeafletEvents, _qunit, _sinon) {\n\n  var MixinImplementation = _ember['default'].Object.extend(_emberFlexberryGisMixinsLeafletEvents['default']);\n\n  (0, _qunit.module)('Unit | Mixin | leaflet events');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var subject = MixinImplementation.create();\n    assert.ok(subject);\n  });\n\n  (0, _qunit.test)('usedLeafletEvents should return events with exists methods', function (assert) {\n    var subject = MixinImplementation.create({\n      leafletEvents: ['testEvent1', 'testEvent2'],\n      testEvent1: function testEvent1() {}\n    });\n\n    assert.deepEqual(subject.get('usedLeafletEvents'), ['testEvent1']);\n  });\n\n  (0, _qunit.test)('_addEventListeners should create eventHandles for used events', function (assert) {\n\n    var addEventListener = _sinon['default'].spy();\n\n    var subject = MixinImplementation.create({\n      usedLeafletEvents: ['testEvent1', 'testEvent2'],\n      _leafletObject: { addEventListener: addEventListener }\n    });\n\n    subject._addEventListeners();\n\n    assert.ok(addEventListener.calledTwice);\n    assert.ok(subject.get('_eventHandlers').hasOwnProperty('testEvent1'));\n    assert.ok(subject.get('_eventHandlers').hasOwnProperty('testEvent2'));\n  });\n\n  (0, _qunit.test)('_removeEventListener shoud remove all used eventHandles', function (assert) {\n    var removeEventListener = _sinon['default'].spy();\n\n    var subject = MixinImplementation.create({\n      usedLeafletEvents: ['testEvent1', 'testEvent2'],\n      _eventHandlers: {\n        testEvent1: '',\n        testEvent2: ''\n      },\n      _leafletObject: { removeEventListener: removeEventListener }\n    });\n\n    subject._removeEventListeners();\n\n    assert.ok(removeEventListener.calledTwice);\n    assert.notOk(subject.get('_eventHandlers').hasOwnProperty('testEvent1'));\n    assert.notOk(subject.get('_eventHandlers').hasOwnProperty('testEvent2'));\n    assert.deepEqual(subject.get('_eventHandlers'), {});\n  });\n});","define('dummy/tests/unit/mixins/leaflet-events-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/mixins');\n  test('unit/mixins/leaflet-events-test.js should pass jscs', function () {\n    ok(true, 'unit/mixins/leaflet-events-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/mixins/leaflet-events-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins/leaflet-events-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/leaflet-events-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/mixins/leaflet-options-test', ['exports', 'ember', 'ember-flexberry-gis/mixins/leaflet-options', 'qunit'], function (exports, _ember, _emberFlexberryGisMixinsLeafletOptions, _qunit) {\n\n  var MixinImplementation = _ember['default'].Object.extend(_emberFlexberryGisMixinsLeafletOptions['default']);\n\n  (0, _qunit.module)('Unit | Mixin | leaflet options');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var subject = MixinImplementation.create();\n    assert.ok(subject);\n  });\n\n  (0, _qunit.test)('get(options) should return object with specified properties', function (assert) {\n    var subject = MixinImplementation.create({\n      leafletOptions: ['testOption1', 'testOption2'],\n      testOption1: '222',\n      testOption2: 333\n    });\n\n    var options = subject.get('options');\n\n    assert.deepEqual(options, {\n      testOption1: '222',\n      testOption2: 333\n    });\n  });\n});","define('dummy/tests/unit/mixins/leaflet-options-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/mixins');\n  test('unit/mixins/leaflet-options-test.js should pass jscs', function () {\n    ok(true, 'unit/mixins/leaflet-options-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/mixins/leaflet-options-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins/leaflet-options-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/leaflet-options-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/mixins/leaflet-properties-test', ['exports', 'ember', 'ember-flexberry-gis/mixins/leaflet-properties', 'qunit', 'sinon'], function (exports, _ember, _emberFlexberryGisMixinsLeafletProperties, _qunit, _sinon) {\n\n  (0, _qunit.module)('Unit | Mixin | leaflet properties');\n\n  var MixinImplementation = _ember['default'].Object.extend(_emberFlexberryGisMixinsLeafletProperties['default']);\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var subject = MixinImplementation.create();\n    assert.ok(subject);\n  });\n\n  (0, _qunit.test)('_addObservers should call this.addObserver for specified properties', function (assert) {\n    var property = 'testProperty';\n    var subject = MixinImplementation.create({\n      leafletProperties: [property]\n    });\n\n    var addObserver = _sinon['default'].spy(subject, 'addObserver');\n\n    subject._addObservers();\n\n    assert.ok(addObserver.calledWith(property));\n  });\n\n  (0, _qunit.test)('after addObserver property changed should fire specified layer function', function (assert) {\n    var callTestProperty = _sinon['default'].spy();\n\n    var subject = MixinImplementation.create({\n      leafletProperties: ['testProperty:callTestProperty'],\n      _leafletObject: { callTestProperty: callTestProperty }\n    });\n\n    subject._addObservers();\n    _ember['default'].run(function () {\n      subject.set('testProperty', 'property');\n    });\n\n    assert.ok(callTestProperty.called);\n  });\n\n  (0, _qunit.test)('after addObserver property changed should fire default setter for property of layer', function (assert) {\n    var setTestProperty = _sinon['default'].spy();\n\n    var subject = MixinImplementation.create({\n      leafletProperties: ['testProperty'],\n      _leafletObject: { setTestProperty: setTestProperty }\n    });\n\n    subject._addObservers();\n    _ember['default'].run(function () {\n      subject.set('testProperty', 'property');\n    });\n\n    assert.ok(setTestProperty.called);\n  });\n\n  (0, _qunit.test)('after addObserver property changed should throws if layer property setter is missing', function (assert) {\n    var subject = MixinImplementation.create({\n      leafletProperties: ['testProperty'],\n      _leafletObject: {}\n    });\n\n    subject._addObservers();\n\n    assert.throws(function () {\n      subject.set('testProperty', 'property');\n    });\n  });\n});","define('dummy/tests/unit/mixins/leaflet-properties-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/mixins');\n  test('unit/mixins/leaflet-properties-test.js should pass jscs', function () {\n    ok(true, 'unit/mixins/leaflet-properties-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/mixins/leaflet-properties-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins/leaflet-properties-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/leaflet-properties-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/mixins/map-route-csw-loader-test', ['exports', 'ember', 'ember-flexberry-gis/mixins/map-route-csw-loader', 'qunit', 'sinon'], function (exports, _ember, _emberFlexberryGisMixinsMapRouteCswLoader, _qunit, _sinon) {\n\n  (0, _qunit.module)('Unit | Mixin | map route csw loader');\n\n  (0, _qunit.test)('it should call _loadCswConnection on model hook', function (assert) {\n    var _loadCswConnections = _sinon['default'].spy();\n    var MapRouteCswLoaderObject = _ember['default'].Object.extend(_emberFlexberryGisMixinsMapRouteCswLoader['default']);\n    var subject = MapRouteCswLoaderObject.create({ _loadCswConnections: _loadCswConnections });\n\n    subject.model();\n\n    assert.ok(_loadCswConnections.called);\n  });\n\n  (0, _qunit.test)('it should pass cswConnections to controller on setupController hook', function (assert) {\n    var MapRouteCswLoaderObject = _ember['default'].Object.extend(_emberFlexberryGisMixinsMapRouteCswLoader['default']);\n    var cswConnections = {};\n    var subject = MapRouteCswLoaderObject.create({ cswConnections: cswConnections });\n    var controller = _ember['default'].Object.create();\n\n    subject.setupController(controller);\n\n    assert.equal(controller.get('cswConnections'), cswConnections);\n  });\n});","define('dummy/tests/unit/mixins/map-route-csw-loader-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/mixins');\n  test('unit/mixins/map-route-csw-loader-test.js should pass jscs', function () {\n    ok(true, 'unit/mixins/map-route-csw-loader-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/mixins/map-route-csw-loader-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins/map-route-csw-loader-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/map-route-csw-loader-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-link-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-layer-link', 'Unit | Model | new-platform-flexberry-g-i-s-layer-link', {\n    // Specify the other units that are required for this test.\n    needs: ['model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-link-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/new-platform-flexberry-g-i-s-layer-link-test.js should pass jscs', function () {\n    ok(true, 'unit/models/new-platform-flexberry-g-i-s-layer-link-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-link-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/new-platform-flexberry-g-i-s-layer-link-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/new-platform-flexberry-g-i-s-layer-link-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-metadata-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-layer-metadata', 'Unit | Model | new-platform-flexberry-g-i-s-layer-metadata', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.js should pass jscs', function () {\n    ok(true, 'unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-parameter-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-link-parameter', 'Unit | Model | new-platform-flexberry-g-i-s-link-parameter', {\n    // Specify the other units that are required for this test.\n    needs: ['model:new-platform-flexberry-g-i-s-layer-link']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-parameter-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/new-platform-flexberry-g-i-s-link-parameter-test.js should pass jscs', function () {\n    ok(true, 'unit/models/new-platform-flexberry-g-i-s-link-parameter-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-parameter-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/new-platform-flexberry-g-i-s-link-parameter-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/new-platform-flexberry-g-i-s-link-parameter-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-layer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-map-layer', 'Unit | Model | new-platform-flexberry-g-i-s-map-layer', {\n    // Specify the other units that are required for this test.\n    needs: ['model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-map']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-layer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/new-platform-flexberry-g-i-s-map-layer-test.js should pass jscs', function () {\n    ok(true, 'unit/models/new-platform-flexberry-g-i-s-map-layer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-layer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/new-platform-flexberry-g-i-s-map-layer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/new-platform-flexberry-g-i-s-map-layer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-object-setting-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-map-object-setting', 'Unit | Model | new-platform-flexberry-g-i-s-map-object-setting', {\n    // Specify the other units that are required for this test.\n    needs: ['model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-map']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.js should pass jscs', function () {\n    ok(true, 'unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-map', 'Unit | Model | new-platform-flexberry-g-i-s-map', {\n    // Specify the other units that are required for this test.\n    needs: ['model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-map-layer']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/new-platform-flexberry-g-i-s-map-test.js should pass jscs', function () {\n    ok(true, 'unit/models/new-platform-flexberry-g-i-s-map-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/new-platform-flexberry-g-i-s-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/new-platform-flexberry-g-i-s-map-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/routes/edit-map-new-test', ['exports', 'ember-flexberry-gis/routes/edit-map-new', 'qunit'], function (exports, _emberFlexberryGisRoutesEditMapNew, _qunit) {\n\n  (0, _qunit.module)('Unit | Route | edit-map-new');\n\n  (0, _qunit.test)('it exists', function (assert) {\n    var route = _emberFlexberryGisRoutesEditMapNew['default'].create({});\n    assert.ok(route);\n  });\n});","define('dummy/tests/unit/routes/edit-map-new-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/routes');\n  test('unit/routes/edit-map-new-test.js should pass jscs', function () {\n    ok(true, 'unit/routes/edit-map-new-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/routes/edit-map-new-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/edit-map-new-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/edit-map-new-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/routes/edit-map-test', ['exports', 'ember-flexberry-gis/routes/edit-map', 'qunit'], function (exports, _emberFlexberryGisRoutesEditMap, _qunit) {\n\n  (0, _qunit.module)('Unit | Route | edit-map');\n\n  (0, _qunit.test)('it exists', function (assert) {\n    var route = _emberFlexberryGisRoutesEditMap['default'].create({});\n    assert.ok(route);\n  });\n});","define('dummy/tests/unit/routes/edit-map-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/routes');\n  test('unit/routes/edit-map-test.js should pass jscs', function () {\n    ok(true, 'unit/routes/edit-map-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/routes/edit-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/edit-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/edit-map-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/routes/list-map-test', ['exports', 'ember-flexberry-gis/routes/list-map', 'qunit'], function (exports, _emberFlexberryGisRoutesListMap, _qunit) {\n\n  (0, _qunit.module)('Unit | Route | list-map');\n\n  (0, _qunit.test)('it exists', function (assert) {\n    var route = _emberFlexberryGisRoutesListMap['default'].create({});\n    assert.ok(route);\n  });\n});","define('dummy/tests/unit/routes/list-map-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/routes');\n  test('unit/routes/list-map-test.js should pass jscs', function () {\n    ok(true, 'unit/routes/list-map-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/routes/list-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/list-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/list-map-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-link-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-layer-link', 'Unit | Serializer | new-platform-flexberry-g-i-s-layer-link', {\n    // Specify the other units that are required for this test.\n    needs: ['model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-layer-metadata', 'Unit | Serializer | new-platform-flexberry-g-i-s-layer-metadata', {\n    // Specify the other units that are required for this test.\n    needs: ['model:new-platform-flexberry-g-i-s-layer-metadata']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-link-parameter', 'Unit | Serializer | new-platform-flexberry-g-i-s-link-parameter', {\n    // Specify the other units that are required for this test.\n    needs: ['model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-link-parameter']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-layer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-map-layer', 'Unit | Serializer | new-platform-flexberry-g-i-s-map-layer', {\n    // Specify the other units that are required for this test.\n    needs: ['model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-map-object-setting', 'Unit | Serializer | new-platform-flexberry-g-i-s-map-object-setting', {\n    // Specify the other units that are required for this test.\n    needs: ['model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-map', 'Unit | Serializer | new-platform-flexberry-g-i-s-map', {\n    // Specify the other units that are required for this test.\n    needs: ['model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/new-platform-flexberry-g-i-s-map-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-map-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/new-platform-flexberry-g-i-s-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-map-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/services/spatial-bookmark-local-storage-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:spatial-bookmark-local-storage', 'Unit | Service | spatial bookmark local storage', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('dummy/tests/unit/services/spatial-bookmark-local-storage-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/services');\n  test('unit/services/spatial-bookmark-local-storage-test.js should pass jscs', function () {\n    ok(true, 'unit/services/spatial-bookmark-local-storage-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/services/spatial-bookmark-local-storage-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/services/spatial-bookmark-local-storage-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/spatial-bookmark-local-storage-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/utils/string-test', ['exports', 'ember', 'qunit', 'ember-flexberry-gis/utils/string'], function (exports, _ember, _qunit, _emberFlexberryGisUtilsString) {\n\n  (0, _qunit.module)('Unit | Util | render-string');\n\n  (0, _qunit.test)('Util is function', function (assert) {\n    assert.expect(1);\n\n    assert.strictEqual(_ember['default'].typeOf(_emberFlexberryGisUtilsString.render) === 'function', true, 'Imported \\'render-string\\' util is function');\n  });\n\n  (0, _qunit.test)('Util returns null for calls with unexpected arguments', function (assert) {\n    assert.expect(9);\n\n    assert.strictEqual((0, _emberFlexberryGisUtilsString.render)(), null, 'Returns null for calls without arguments');\n\n    _ember['default'].A([null, 1, true, false, {}, [], function () {}, new Date()]).forEach(function (wrongFirstArgument) {\n      assert.strictEqual((0, _emberFlexberryGisUtilsString.render)(wrongFirstArgument), null, 'Returns null for calls with first argument not of string type');\n    });\n  });\n\n  (0, _qunit.test)('Util returns same string for calls with unexpected render arguments', function (assert) {\n    assert.expect(4);\n\n    var stringWithTemplates = 'I have {{ one }} dollar in my wallet, {{ two }} apples in my bag, and {{ three }} hours of free time';\n    assert.strictEqual((0, _emberFlexberryGisUtilsString.render)(stringWithTemplates), stringWithTemplates, 'Returns same string for calls without render options');\n\n    assert.strictEqual((0, _emberFlexberryGisUtilsString.render)(stringWithTemplates, { context: null }), stringWithTemplates, 'Returns same string for calls without render context');\n\n    assert.strictEqual((0, _emberFlexberryGisUtilsString.render)(stringWithTemplates, { context: { 'ONE': 1, 'TWO': 2, 'THREE': 3 } }), stringWithTemplates, 'Returns same string for calls with context without templates-related keys');\n\n    assert.strictEqual((0, _emberFlexberryGisUtilsString.render)(stringWithTemplates, { context: { 'one': 1, 'two': 2, 'three': 3 }, delimiters: ['<<', '>>'] }), stringWithTemplates, 'Returns same string for calls with unexpected delimiters');\n  });\n\n  (0, _qunit.test)('Util returns rendered string for calls with expected render arguments', function (assert) {\n    assert.expect(2);\n\n    var stringWithTemplatesAndDefaultDelimiters = 'I have {{ one }} dollar in my wallet, {{ two }} apples in my bag, and {{ three }} hours of free time';\n    assert.strictEqual((0, _emberFlexberryGisUtilsString.render)(stringWithTemplatesAndDefaultDelimiters, { context: { 'one': 1, 'two': 2, 'three': 3 } }), 'I have 1 dollar in my wallet, 2 apples in my bag, and 3 hours of free time', 'Returns rendered string for calls with default delimiters');\n\n    var stringWithTemplatesAndCustomDelimiters = 'I have {% one %} dollar in my wallet, {% two %} apples in my bag, and {% three %} hours of free time';\n    assert.strictEqual((0, _emberFlexberryGisUtilsString.render)(stringWithTemplatesAndCustomDelimiters, { context: { 'one': 1, 'two': 2, 'three': 3 }, delimiters: ['{%', '%}'] }), 'I have 1 dollar in my wallet, 2 apples in my bag, and 3 hours of free time', 'Returns rendered string for calls with custom delimiters');\n  });\n});","define('dummy/tests/unit/utils/string-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/utils');\n  test('unit/utils/string-test.js should pass jscs', function () {\n    ok(true, 'unit/utils/string-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/utils/string-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/utils/string-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/string-test.js should pass jshint.');\n  });\n});","define('dummy/tests/views/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - views');\n  test('views/application.js should pass jscs', function () {\n    ok(true, 'views/application.js should pass jscs.');\n  });\n});","define('dummy/tests/views/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - views/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'views/application.js should pass jshint.');\n  });\n});","define('dummy/tests/views/components-examples/flexberry-maplayers/settings-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - views/components-examples/flexberry-maplayers');\n  test('views/components-examples/flexberry-maplayers/settings-example.js should pass jscs', function () {\n    ok(true, 'views/components-examples/flexberry-maplayers/settings-example.js should pass jscs.');\n  });\n});","define('dummy/tests/views/components-examples/flexberry-maplayers/settings-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - views/components-examples/flexberry-maplayers/settings-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'views/components-examples/flexberry-maplayers/settings-example.js should pass jshint.');\n  });\n});","define('dummy/tests/views/components-examples/flexberry-tree/settings-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - views/components-examples/flexberry-tree');\n  test('views/components-examples/flexberry-tree/settings-example.js should pass jscs', function () {\n    ok(true, 'views/components-examples/flexberry-tree/settings-example.js should pass jscs.');\n  });\n});","define('dummy/tests/views/components-examples/flexberry-tree/settings-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - views/components-examples/flexberry-tree/settings-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'views/components-examples/flexberry-tree/settings-example.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChhzeA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtrvDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChtGA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbpGA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnrhlIA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}